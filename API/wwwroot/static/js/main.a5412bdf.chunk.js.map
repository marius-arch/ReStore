{"version":3,"sources":["features/contact/counterSlice.ts","app/models/pagination.ts","app/api/agent.ts","app/util/util.ts","features/basket/basketSlice.ts","features/catalog/catalogSlice.ts","features/account/accountSlice.ts","app/store/configureStore.ts","app/layout/SignedInMenu.tsx","app/layout/Header.tsx","features/home/HomePage.tsx","app/layout/PrivateRoute.tsx","features/catalog/ProductCard.tsx","features/catalog/ProductCardSkeleton.tsx","features/catalog/ProductList.tsx","features/catalog/ProductSearch.tsx","app/layout/LoadingComponent.tsx","app/components/RadioButtonGroup.tsx","app/components/CheckboxButtons.tsx","app/components/AppPagination.tsx","app/hooks/useProducts.tsx","features/catalog/Catalog.tsx","app/errors/NotFound.tsx","features/catalog/ProductDetails.tsx","features/about/AboutPage.tsx","features/contact/ContactPage.tsx","app/errors/ServerError.tsx","features/basket/BasketSummary.tsx","features/basket/BasketTable.tsx","features/basket/BasketPage.tsx","features/account/Login.tsx","features/account/Register.tsx","features/orders/OrderDetailed.tsx","features/orders/Orders.tsx","app/components/AppCheckbox.tsx","app/components/AppTextInput.tsx","features/checkout/AddressForm.tsx","features/checkout/StripeInput.tsx","features/checkout/PaymentForm.tsx","features/checkout/Review.tsx","features/checkout/checkoutValidation.ts","features/checkout/CheckoutPage.tsx","features/checkout/CheckoutWrapper.tsx","app/components/AppDropZone.tsx","app/components/AppSelectList.tsx","features/admin/productValidation.ts","features/admin/ProductForm.tsx","features/admin/Inventory.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["counterSlice","createSlice","name","initialState","data","title","reducers","increment","state","action","payload","decrement","actions","PaginatedResponse","items","metaData","this","axios","defaults","baseURL","process","withCredentials","responseBody","response","interceptors","request","use","config","token","store","getState","account","user","headers","Authorization","a","pagination","JSON","parse","error","status","errors","modelStateErrors","key","push","flat","toast","history","pathname","Promise","reject","requests","url","params","get","then","body","post","delete","put","createFormData","item","formData","FormData","append","Basket","addItem","productId","quantity","removeItem","agent","Catalog","list","details","id","fetchFilters","TestErrors","get400Error","get401Error","get404Error","get500Error","getValidationError","Account","login","values","register","currentUser","fetchAddress","Orders","fetch","create","Payments","createPaymentIntent","Admin","createProduct","product","updateProduct","deleteProduct","currencyFormat","amount","toFixed","fetchBasketAsync","createAsyncThunk","_","thunkAPI","rejectWithValue","condition","b","document","cookie","match","pop","getCookie","addBasketItemAsync","removeBasketItemAsync","basketSlice","basket","setBasket","clearBasket","extraReducers","builder","addCase","pending","meta","arg","fulfilled","itemIndex","findIndex","i","undefined","splice","rejected","console","log","addMatcher","isAnyOf","productsAdapter","createEntityAdapter","getAxiosParams","productParams","URLSearchParams","pageNumber","toString","pageSize","orderBy","searchTerm","brands","length","types","fetchProductsAsync","catalog","dispatch","setMetaData","fetchProductAsync","catalogSlice","getInitialState","productsLoaded","filtersLoaded","setProductParams","setPageNumber","resetProductParams","setProduct","upsertOne","removeProduct","removeOne","setAll","productSelectors","getSelectors","signInUser","thunkApi","userDto","localStorage","setItem","stringify","fetchCurrentUser","setUser","getItem","accountSlice","signOut","roles","atob","split","configureStore","reducer","counter","useAppDispatch","useDispatch","useAppSelector","useSelector","SignedInMenu","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","Button","color","onClick","event","currentTarget","sx","typography","email","Menu","onClose","TransitionComponent","Fade","MenuItem","component","Link","to","midLinks","path","rightLinks","navStyles","textDecoration","Header","darkMode","handleThemeChange","itemCount","reduce","sum","AppBar","position","Toolbar","display","justifyContent","alignItems","Box","Typography","variant","NavLink","exact","IconButton","ml","List","map","ListItem","toUpperCase","includes","size","Badge","badgeContent","ShoppingCart","HomePage","dots","infinite","speed","slidesToShow","slidesToScroll","src","alt","style","width","maxHeight","p","PrivateRoute","Component","rest","render","props","some","r","from","location","ProductCard","Card","CardHeader","avatar","Avatar","bgcolor","charAt","titleTypographyProps","fontWeight","CardMedia","height","backgroundSize","image","pictureUrl","CardContent","gutterBottom","price","brand","CardActions","LoadingButton","loading","ProductCardSkeleton","Grid","xs","Skeleton","animation","marginBottom","ProductList","products","container","spacing","ProductSearch","setSearchTerm","debouncedSearch","debounce","target","value","TextField","label","fullWidth","onChange","LoadingComponent","message","Backdrop","invisible","CircularProgress","top","RadioButtonGroup","options","selectedValue","FormControl","RadioGroup","FormControlLabel","control","Radio","CheckboxButtons","checked","checkedItems","setCheckedItems","FormGroup","Checkbox","indexOf","newChecked","filter","handleChecked","AppPagination","onPageChange","currentPage","totalCount","totalPages","Pagination","count","page","e","handlePageChange","useProducts","selectAll","useEffect","sortOptions","columnSpacing","Paper","mb","NotFound","Container","Divider","ProductDetails","useParams","selectById","productStatus","setQuantity","find","parseInt","TableContainer","Table","TableBody","TableRow","TableCell","description","type","quantityInStock","disabled","updatedQuantity","AboutPage","validationErrors","setValidationErrors","ButtonGroup","catch","Alert","severity","AlertTitle","ListItemText","ContactPage","ServerError","useHistory","useLocation","detail","BasketSummary","subtotal","deliveryFee","colSpan","align","fontStyle","BasketTable","isBasket","minWidth","TableHead","border","scope","marginRight","Remove","Add","Delete","BasketPage","Login","useForm","mode","handleSubmit","formState","isSubmitting","isValid","maxWidth","flexDirection","m","onSubmit","noValidate","mt","margin","autoComplete","autoFocus","required","username","helperText","password","Register","setError","success","forEach","handleApiErrors","pattern","OrderDetailed","order","setSelectedOrder","orderItems","orderStatus","orders","setOrders","setLoading","selectedOrderNumber","setSelectedOrderNumber","finally","o","total","orderDate","AppCheckbox","field","useController","defaultValue","AppTextInput","fieldState","multiline","rows","AddressForm","useFormContext","sm","isDirty","StripeInput","forwardRef","ref","elementRef","useRef","useImperativeHandle","focus","current","onReady","element","PaymentForm","cardState","onCardInputChange","md","elementError","cardNumber","InputLabelProps","shrink","InputProps","inputComponent","inputProps","CardNumberElement","cardExpiry","CardExpiryElement","cardCvc","CardCvcElement","Review","validationSchema","yup","fullName","address1","address2","city","zip","country","nameOnCard","steps","CheckoutPage","activeStep","setActiveStep","orderNumber","setOrderNumber","setCardState","cardComplete","setCardComplete","paymentMessage","setPaymentMessage","paymentSucceeded","setPaymentSucceeded","stripe","useStripe","elements","useElements","elementType","complete","currentValidationSchema","methods","resolver","yupResolver","submitOrder","saveAddress","shippingAddress","cardElement","getElement","confirmCardPayment","clientSecret","payment_method","card","billing_details","paymentResult","paymentIntent","reset","getValues","handleNext","handleBack","my","Stepper","pt","pb","Step","StepLabel","step","Error","getStepContent","stripePromise","loadStripe","CheckoutWrapper","AppDropZone","dzStyles","borderColor","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","Object","assign","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","UploadFile","fontSize","FormHelperText","AppSelectList","InputLabel","Select","index","moreThan","min","file","when","is","ProductForm","cancelEdit","watch","watchFile","revokeObjectURL","Inventory","editMode","setEditMode","selectedProduct","setSelectedProduct","setTarget","handleSelectProduct","startIcon","Edit","App","initApp","setDarkMode","paletteType","theme","createTheme","palette","background","default","ThemeProvider","hideProgressBar","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a5412bdf.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport interface CounterState {\r\n    data: number;\r\n    title: string;\r\n}\r\n\r\nconst initialState: CounterState = {\r\n    data: 42,\r\n    title: \"YARC (yet another redux counter with redux toolkit)\",\r\n};\r\n\r\nexport const counterSlice = createSlice({\r\n    name: \"counter\",\r\n    initialState,\r\n    reducers: {\r\n        increment: (state, action) => {\r\n            state.data += action.payload;\r\n        },\r\n        decrement: (state, action) => {\r\n            state.data -= action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { increment, decrement } = counterSlice.actions;\r\n","export interface MetaData {\r\n    currentPage: number;\r\n    totalPages: number;\r\n    pageSize: number;\r\n    totalCount: number;\r\n}\r\n\r\nexport class PaginatedResponse<T> {\r\n    items: T;\r\n    metaData: MetaData;\r\n\r\n    constructor(items: T, metaData: MetaData) {\r\n        this.items = items;\r\n        this.metaData = metaData;\r\n    }\r\n}\r\n","import { PaginatedResponse } from \"../models/pagination\";\r\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { store } from \"../store/configureStore\";\r\n\r\nconst sleep = () => new Promise((resolve) => setTimeout(resolve, 500));\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\naxios.defaults.withCredentials = true;\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\naxios.interceptors.request.use((config) => {\r\n    const token = store.getState().account.user?.token;\r\n    if (token) config.headers!.Authorization = `Bearer ${token}`;\r\n    return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n    async (response) => {\r\n        if (process.env.NODE_ENV === \"development\") await sleep();\r\n        const pagination = response.headers[\"pagination\"];\r\n        if (pagination) {\r\n            response.data = new PaginatedResponse(\r\n                response.data,\r\n                JSON.parse(pagination)\r\n            );\r\n            return response;\r\n        }\r\n        return response;\r\n    },\r\n    (error: AxiosError) => {\r\n        const { data, status } = error.response!;\r\n        switch (status) {\r\n            case 400:\r\n                if (data.errors) {\r\n                    const modelStateErrors: string[] = [];\r\n                    for (const key in data.errors) {\r\n                        if (data.errors[key]) {\r\n                            modelStateErrors.push(data.errors[key]);\r\n                        }\r\n                    }\r\n                    throw modelStateErrors.flat();\r\n                }\r\n                toast.error(data.title);\r\n                break;\r\n            case 401:\r\n                toast.error(data.title);\r\n                break;\r\n            case 403:\r\n                toast.error(\"You are not allowed to do that!\");\r\n                break;\r\n            case 500:\r\n                history.push({\r\n                    pathname: \"/server-error\",\r\n                    state: { error: data },\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return Promise.reject(error.response);\r\n    }\r\n);\r\n\r\nconst requests = {\r\n    get: (url: string, params?: URLSearchParams) =>\r\n        axios.get(url, { params: params }).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n    delete: (url: string) => axios.delete(url).then(responseBody),\r\n    postForm: (url: string, data: FormData) =>\r\n        axios\r\n            .post(url, data, {\r\n                headers: { \"Content-type\": \"multipart/form-data\" },\r\n            })\r\n            .then(responseBody),\r\n    putForm: (url: string, data: FormData) =>\r\n        axios\r\n            .put(url, data, {\r\n                headers: { \"Content-type\": \"multipart/form-data\" },\r\n            })\r\n            .then(responseBody),\r\n};\r\n\r\nfunction createFormData(item: any) {\r\n    let formData = new FormData();\r\n    for (const key in item) {\r\n        formData.append(key, item[key]);\r\n    }\r\n    return formData;\r\n}\r\n\r\nconst Admin = {\r\n    createProduct: (product: any) =>\r\n        requests.postForm(\"products\", createFormData(product)),\r\n    updateProduct: (product: any) =>\r\n        requests.putForm(\"products\", createFormData(product)),\r\n    deleteProduct: (id: number) => requests.delete(`products/${id}`),\r\n};\r\n\r\nconst Catalog = {\r\n    list: (params: URLSearchParams) => requests.get(\"products\", params),\r\n    details: (id: number) => requests.get(`products/${id}`),\r\n    fetchFilters: () => requests.get(\"products/filters\"),\r\n};\r\n\r\nconst TestErrors = {\r\n    get400Error: () => requests.get(\"buggy/bad-request\"),\r\n    get401Error: () => requests.get(\"buggy/unauthorized\"),\r\n    get404Error: () => requests.get(\"buggy/not-found\"),\r\n    get500Error: () => requests.get(\"buggy/server-error\"),\r\n    getValidationError: () => requests.get(\"buggy/validation-error\"),\r\n};\r\n\r\nconst Basket = {\r\n    get: () => requests.get(\"basket\"),\r\n    addItem: (productId: number, quantity = 1) =>\r\n        requests.post(`basket?productId=${productId}&quantity=${quantity}`, {}),\r\n    removeItem: (productId: number, quantity = 1) =>\r\n        requests.delete(`basket?productId=${productId}&quantity=${quantity}`),\r\n};\r\n\r\nconst Account = {\r\n    login: (values: any) => requests.post(\"account/login\", values),\r\n    register: (values: any) => requests.post(\"account/register\", values),\r\n    currentUser: () => requests.get(\"account/currentUser\"),\r\n    fetchAddress: () => requests.get(\"account/savedAddress\"),\r\n};\r\n\r\nconst Orders = {\r\n    list: () => requests.get(\"orders\"),\r\n    fetch: (id: number) => requests.get(`orders${id}`),\r\n    create: (values: any) => requests.post(\"orders\", values),\r\n};\r\n\r\nconst Payments = {\r\n    createPaymentIntent: () => requests.post(\"payments\", {}),\r\n};\r\n\r\nconst agent = {\r\n    Catalog,\r\n    TestErrors,\r\n    Basket,\r\n    Account,\r\n    Orders,\r\n    Payments,\r\n    Admin,\r\n};\r\n\r\nexport default agent;\r\n","export function getCookie(key: string) {\r\n    const b = document.cookie.match(\"(^|;)\\\\s*\" + key + \"\\\\s*=\\\\s*([^;]+)\");\r\n    return b ? b.pop() : \"\";\r\n}\r\n\r\nexport function currencyFormat(amount: number) {\r\n    return \"$\" + (amount / 100).toFixed(2);\r\n}\r\n","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { Basket } from \"../../app/models/basket\";\r\nimport { getCookie } from \"../../app/util/util\";\r\n\r\ninterface BasketState {\r\n    basket: Basket | null;\r\n    status: string;\r\n}\r\n\r\nconst initialState: BasketState = {\r\n    basket: null,\r\n    status: \"idle\",\r\n};\r\n\r\nexport const fetchBasketAsync = createAsyncThunk<Basket>(\r\n    \"basket/fetchBasketAsync\",\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            return await agent.Basket.get();\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n        }\r\n    },\r\n    {\r\n        condition: () => {\r\n            if (!getCookie(\"buyerId\")) return false;\r\n        },\r\n    }\r\n);\r\n\r\nexport const addBasketItemAsync = createAsyncThunk<\r\n    Basket,\r\n    { productId: number; quantity?: number }\r\n>(\r\n    \"basket/addBasketItemAsync\",\r\n    async ({ productId, quantity = 1 }, thunkAPI) => {\r\n        try {\r\n            return await agent.Basket.addItem(productId, quantity);\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n        }\r\n    }\r\n);\r\n\r\nexport const removeBasketItemAsync = createAsyncThunk<\r\n    void,\r\n    { productId: number; quantity: number; name?: string }\r\n>(\"basket/removeBasketItemAsync\", async ({ productId, quantity }, thunkAPI) => {\r\n    try {\r\n        await agent.Basket.removeItem(productId, quantity);\r\n    } catch (error: any) {\r\n        return thunkAPI.rejectWithValue({ error: error.data });\r\n    }\r\n});\r\n\r\nexport const basketSlice = createSlice({\r\n    name: \"basket\",\r\n    initialState,\r\n    reducers: {\r\n        setBasket: (state, action) => {\r\n            state.basket = action.payload;\r\n        },\r\n        clearBasket: (state) => {\r\n            state.basket = null;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(addBasketItemAsync.pending, (state, action) => {\r\n            state.status = \"pendingAddItem\" + action.meta.arg.productId;\r\n        });\r\n        builder.addCase(removeBasketItemAsync.pending, (state, action) => {\r\n            state.status =\r\n                \"pendingRemoveItem\" +\r\n                action.meta.arg.productId +\r\n                action.meta.arg.name;\r\n        });\r\n        builder.addCase(removeBasketItemAsync.fulfilled, (state, action) => {\r\n            const { productId, quantity } = action.meta.arg;\r\n            const itemIndex = state.basket?.items.findIndex(\r\n                (i) => i.productId === productId\r\n            );\r\n            if (itemIndex === -1 || itemIndex === undefined) return;\r\n            state.basket!.items[itemIndex].quantity -= quantity;\r\n            if (state.basket?.items[itemIndex].quantity === 0)\r\n                state.basket.items.splice(itemIndex, 1);\r\n            state.status = \"idle\";\r\n        });\r\n        builder.addCase(removeBasketItemAsync.rejected, (state, action) => {\r\n            state.status = \"idle\";\r\n            console.log(action.payload);\r\n        });\r\n        builder.addMatcher(\r\n            isAnyOf(addBasketItemAsync.fulfilled, fetchBasketAsync.fulfilled),\r\n            (state, action) => {\r\n                state.basket = action.payload;\r\n                state.status = \"idle\";\r\n            }\r\n        );\r\n        builder.addMatcher(\r\n            isAnyOf(addBasketItemAsync.rejected, fetchBasketAsync.rejected),\r\n            (state, action) => {\r\n                state.status = \"idle\";\r\n                console.log(action.payload);\r\n            }\r\n        );\r\n    },\r\n});\r\n\r\nexport const { setBasket, clearBasket } = basketSlice.actions;\r\n","import {\r\n    createAsyncThunk,\r\n    createEntityAdapter,\r\n    createSlice,\r\n} from \"@reduxjs/toolkit\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { MetaData } from \"../../app/models/pagination\";\r\nimport { Product, ProductParams } from \"../../app/models/product\";\r\nimport { RootState } from \"../../app/store/configureStore\";\r\n\r\ninterface CatalogState {\r\n    productsLoaded: boolean;\r\n    filtersLoaded: boolean;\r\n    status: string;\r\n    brands: string[];\r\n    types: string[];\r\n    productParams: ProductParams;\r\n    metaData: MetaData | null;\r\n}\r\n\r\nconst productsAdapter = createEntityAdapter<Product>();\r\n\r\nfunction getAxiosParams(productParams: ProductParams) {\r\n    const params = new URLSearchParams();\r\n    params.append(\"pageNumber\", productParams.pageNumber.toString());\r\n    params.append(\"pageSize\", productParams.pageSize.toString());\r\n    params.append(\"orderBy\", productParams.orderBy);\r\n    if (productParams.searchTerm)\r\n        params.append(\"searchTerm\", productParams.searchTerm);\r\n    if (productParams.brands.length > 0)\r\n        params.append(\"brands\", productParams.brands.toString());\r\n    if (productParams.types.length > 0)\r\n        params.append(\"types\", productParams.types.toString());\r\n    return params;\r\n}\r\n\r\nexport const fetchProductsAsync = createAsyncThunk<\r\n    Product[],\r\n    void,\r\n    { state: RootState }\r\n>(\"catalog/fetchProductsAsync\", async (_, thunkAPI) => {\r\n    const params = getAxiosParams(thunkAPI.getState().catalog.productParams);\r\n    try {\r\n        const response = await agent.Catalog.list(params);\r\n        thunkAPI.dispatch(setMetaData(response.metaData));\r\n        return response.items;\r\n    } catch (error: any) {\r\n        return thunkAPI.rejectWithValue({ error: error.data });\r\n    }\r\n});\r\n\r\nexport const fetchProductAsync = createAsyncThunk<Product, number>(\r\n    \"catalog/fetchProductAsync\",\r\n    async (productId, thunkAPI) => {\r\n        try {\r\n            return await agent.Catalog.details(productId);\r\n        } catch (error: any) {\r\n            thunkAPI.rejectWithValue({ error: error.data });\r\n        }\r\n    }\r\n);\r\n\r\nexport const fetchFilters = createAsyncThunk(\r\n    \"catalog/fetchFilters\",\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            return agent.Catalog.fetchFilters();\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n        }\r\n    }\r\n);\r\n\r\nfunction initParams() {\r\n    return {\r\n        pageNumber: 1,\r\n        pageSize: 6,\r\n        orderBy: \"name\",\r\n        brands: [],\r\n        types: [],\r\n    };\r\n}\r\n\r\nexport const catalogSlice = createSlice({\r\n    name: \"catalog\",\r\n    initialState: productsAdapter.getInitialState<CatalogState>({\r\n        productsLoaded: false,\r\n        filtersLoaded: false,\r\n        status: \"idle\",\r\n        brands: [],\r\n        types: [],\r\n        productParams: initParams(),\r\n        metaData: null,\r\n    }),\r\n    reducers: {\r\n        setProductParams: (state, action) => {\r\n            state.productsLoaded = false;\r\n            state.productParams = {\r\n                ...state.productParams,\r\n                ...action.payload,\r\n                pageNumber: 1,\r\n            };\r\n        },\r\n        setPageNumber: (state, action) => {\r\n            state.productsLoaded = false;\r\n            state.productParams = {\r\n                ...state.productParams,\r\n                ...action.payload,\r\n            };\r\n        },\r\n        setMetaData: (state, action) => {\r\n            state.metaData = action.payload;\r\n        },\r\n        resetProductParams: (state) => {\r\n            state.productParams = initParams();\r\n        },\r\n        setProduct: (state, action) => {\r\n            productsAdapter.upsertOne(state, action);\r\n            state.productsLoaded = false;\r\n        },\r\n        removeProduct: (state, action) => {\r\n            productsAdapter.removeOne(state, action.payload);\r\n            state.productsLoaded = false;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchProductsAsync.pending, (state) => {\r\n            state.status = \"pendingFetchProducts\";\r\n        });\r\n        builder.addCase(fetchProductsAsync.fulfilled, (state, action) => {\r\n            productsAdapter.setAll(state, action.payload);\r\n            state.status = \"idle\";\r\n            state.productsLoaded = true;\r\n        });\r\n        builder.addCase(fetchProductsAsync.rejected, (state, action) => {\r\n            console.log(action.payload);\r\n            state.status = \"idle\";\r\n        });\r\n        builder.addCase(fetchProductAsync.pending, (state) => {\r\n            state.status = \"pendingFetchProduct\";\r\n        });\r\n        builder.addCase(fetchProductAsync.fulfilled, (state, action) => {\r\n            productsAdapter.upsertOne(state, action.payload);\r\n            state.status = \"idle\";\r\n        });\r\n        builder.addCase(fetchProductAsync.rejected, (state, action) => {\r\n            console.log(action);\r\n            state.status = \"idle\";\r\n        });\r\n        builder.addCase(fetchFilters.pending, (state) => {\r\n            state.status = \"pendingFetchFilters\";\r\n        });\r\n        builder.addCase(fetchFilters.fulfilled, (state, action) => {\r\n            state.brands = action.payload.brands;\r\n            state.types = action.payload.types;\r\n            state.filtersLoaded = true;\r\n        });\r\n        builder.addCase(fetchFilters.rejected, (state, action) => {\r\n            state.status = \"idle\";\r\n            console.log(action.payload);\r\n        });\r\n    },\r\n});\r\n\r\nexport const productSelectors = productsAdapter.getSelectors(\r\n    (state: RootState) => state.catalog\r\n);\r\n\r\nexport const {\r\n    setProductParams,\r\n    resetProductParams,\r\n    setMetaData,\r\n    setPageNumber,\r\n    setProduct,\r\n    removeProduct,\r\n} = catalogSlice.actions;\r\n","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\r\nimport { FieldValues } from \"react-hook-form\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { User } from \"../../app/models/user\";\r\nimport { setBasket } from \"../basket/basketSlice\";\r\n\r\ninterface AccountState {\r\n    user: User | null;\r\n}\r\n\r\nconst initialState: AccountState = {\r\n    user: null,\r\n};\r\n\r\nexport const signInUser = createAsyncThunk<User, FieldValues>(\r\n    \"account/signInUser\",\r\n    async (data, thunkApi) => {\r\n        try {\r\n            const userDto = await agent.Account.login(data);\r\n            const { basket, ...user } = userDto;\r\n            if (basket) thunkApi.dispatch(setBasket(basket));\r\n            localStorage.setItem(\"user\", JSON.stringify(user));\r\n            return user;\r\n        } catch (error: any) {\r\n            return thunkApi.rejectWithValue({ error: error.data });\r\n        }\r\n    }\r\n);\r\n\r\nexport const fetchCurrentUser = createAsyncThunk<User>(\r\n    \"account/fetchCurrentUser\",\r\n    async (_, thunkApi) => {\r\n        thunkApi.dispatch(setUser(JSON.parse(localStorage.getItem(\"user\")!)));\r\n        try {\r\n            const userDto = await agent.Account.currentUser();\r\n            const { basket, ...user } = userDto;\r\n            if (basket) thunkApi.dispatch(setBasket(basket));\r\n            localStorage.setItem(\"user\", JSON.stringify(user));\r\n            return user;\r\n        } catch (error: any) {\r\n            return thunkApi.rejectWithValue({ error: error.data });\r\n        }\r\n    },\r\n    {\r\n        condition: () => {\r\n            if (!localStorage.getItem(\"user\")) return false;\r\n        },\r\n    }\r\n);\r\n\r\nexport const accountSlice = createSlice({\r\n    name: \"account\",\r\n    initialState,\r\n    reducers: {\r\n        signOut: (state) => {\r\n            state.user = null;\r\n            localStorage.removeItem(\"user\");\r\n            history.push(\"/\");\r\n        },\r\n        setUser: (state, action) => {\r\n            let claims = JSON.parse(atob(action.payload.token.split(\".\")[1]));\r\n            let roles =\r\n                claims[\r\n                    \"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"\r\n                ];\r\n            state.user = {\r\n                ...action.payload,\r\n                roles: typeof roles === \"string\" ? [roles] : roles,\r\n            };\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchCurrentUser.rejected, (state) => {\r\n            state.user = null;\r\n            localStorage.removeItem(\"user\");\r\n            toast.error(\"Session expired - please login again\");\r\n            history.push(\"/\");\r\n        });\r\n        builder.addMatcher(\r\n            isAnyOf(signInUser.fulfilled, fetchCurrentUser.fulfilled),\r\n            (state, action) => {\r\n                let claims = JSON.parse(\r\n                    atob(action.payload.token.split(\".\")[1])\r\n                );\r\n                let roles =\r\n                    claims[\r\n                        \"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"\r\n                    ];\r\n                state.user = {\r\n                    ...action.payload,\r\n                    roles: typeof roles === \"string\" ? [roles] : roles,\r\n                };\r\n            }\r\n        );\r\n        builder.addMatcher(isAnyOf(signInUser.rejected), (state, action) => {\r\n            throw action.payload;\r\n        });\r\n    },\r\n});\r\n\r\nexport const { signOut, setUser } = accountSlice.actions;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport { counterSlice } from \"../../features/contact/counterSlice\";\r\nimport { basketSlice } from \"../../features/basket/basketSlice\";\r\nimport { catalogSlice } from \"../../features/catalog/catalogSlice\";\r\nimport { accountSlice } from \"../../features/account/accountSlice\";\r\n\r\n// export function configureStore() {\r\n//     return createStore(counterReducer);\r\n// }\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        counter: counterSlice.reducer,\r\n        basket: basketSlice.reducer,\r\n        catalog: catalogSlice.reducer,\r\n        account: accountSlice.reducer,\r\n    },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import React from \"react\";\r\nimport { Button, Fade, Menu, MenuItem } from \"@mui/material\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/configureStore\";\r\nimport { signOut } from \"../../features/account/accountSlice\";\r\nimport { clearBasket } from \"../../features/basket/basketSlice\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function SignedInMenu() {\r\n    const dispatch = useAppDispatch();\r\n    const { user } = useAppSelector((state) => state.account);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event: any) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                color='inherit'\r\n                onClick={handleClick}\r\n                sx={{ typography: \"h6\" }}\r\n            >\r\n                {user?.email}\r\n            </Button>\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                TransitionComponent={Fade}\r\n            >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem component={Link} to='/orders'>\r\n                    My orders\r\n                </MenuItem>\r\n                <MenuItem\r\n                    onClick={() => {\r\n                        dispatch(signOut());\r\n                        dispatch(clearBasket());\r\n                    }}\r\n                >\r\n                    Logout\r\n                </MenuItem>\r\n            </Menu>\r\n        </>\r\n    );\r\n}\r\n","import { ShoppingCart } from \"@mui/icons-material\";\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Typography,\r\n    List,\r\n    ListItem,\r\n    IconButton,\r\n    Badge,\r\n} from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport Brightness4Icon from \"@mui/icons-material/Brightness4\";\r\nimport Brightness7Icon from \"@mui/icons-material/Brightness7\";\r\nimport { useAppSelector } from \"../store/configureStore\";\r\nimport SignedInMenu from \"./SignedInMenu\";\r\n\r\ninterface Props {\r\n    darkMode: boolean;\r\n    handleThemeChange: () => void;\r\n}\r\n\r\nconst midLinks = [\r\n    { title: \"catalog\", path: \"/catalog\" },\r\n    { title: \"about\", path: \"/about\" },\r\n    { title: \"contact\", path: \"/contact\" },\r\n];\r\n\r\nconst rightLinks = [\r\n    { title: \"login\", path: \"/login\" },\r\n    { title: \"register\", path: \"/register\" },\r\n];\r\n\r\nconst navStyles = {\r\n    color: \"inherit\",\r\n    textDecoration: \"none\",\r\n    typography: \"h6\",\r\n    \"&:hover\": {\r\n        color: \"grey.500\",\r\n    },\r\n    \"&.active\": {\r\n        color: \"text.secondary\",\r\n    },\r\n};\r\n\r\nexport default function Header({ darkMode, handleThemeChange }: Props) {\r\n    const { basket } = useAppSelector((state) => state.basket);\r\n    const { user } = useAppSelector((state) => state.account);\r\n    const itemCount = basket?.items.reduce(\r\n        (sum, item) => sum + item.quantity,\r\n        0\r\n    );\r\n    return (\r\n        <AppBar position='static'>\r\n            <Toolbar\r\n                sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                }}\r\n            >\r\n                <Box display='flex' alignItems='center'>\r\n                    <Typography\r\n                        variant='h6'\r\n                        component={NavLink}\r\n                        to='/'\r\n                        exact\r\n                        sx={navStyles}\r\n                    >\r\n                        RE-STORE\r\n                    </Typography>\r\n                    <IconButton\r\n                        sx={{ ml: 1 }}\r\n                        onClick={handleThemeChange}\r\n                        color='inherit'\r\n                    >\r\n                        {darkMode ? <Brightness7Icon /> : <Brightness4Icon />}\r\n                    </IconButton>\r\n                </Box>\r\n                <Box>\r\n                    <List sx={{ display: \"flex\" }}>\r\n                        {midLinks.map(({ title, path }) => (\r\n                            <ListItem\r\n                                component={NavLink}\r\n                                to={path}\r\n                                key={path}\r\n                                sx={navStyles}\r\n                            >\r\n                                {title.toUpperCase()}\r\n                            </ListItem>\r\n                        ))}\r\n                        {user && user.roles?.includes(\"Admin\") && (\r\n                            <ListItem\r\n                                component={NavLink}\r\n                                to={\"/inventory\"}\r\n                                sx={navStyles}\r\n                            >\r\n                                INVENTORY\r\n                            </ListItem>\r\n                        )}\r\n                    </List>\r\n                </Box>\r\n                <Box display='flex' alignItems='center'>\r\n                    <IconButton\r\n                        component={Link}\r\n                        to='/basket'\r\n                        size='large'\r\n                        sx={{ color: \"inherit\" }}\r\n                    >\r\n                        <Badge badgeContent={itemCount} color='secondary'>\r\n                            <ShoppingCart />\r\n                        </Badge>\r\n                    </IconButton>\r\n                    {user ? (\r\n                        <SignedInMenu />\r\n                    ) : (\r\n                        <List sx={{ display: \"flex\" }}>\r\n                            {rightLinks.map(({ title, path }) => (\r\n                                <ListItem\r\n                                    component={NavLink}\r\n                                    to={path}\r\n                                    key={path}\r\n                                    sx={navStyles}\r\n                                >\r\n                                    {title.toUpperCase()}\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    )}\r\n                </Box>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n","import { Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport Slider from \"react-slick\";\r\n\r\nexport default function HomePage() {\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Slider {...settings}>\r\n                <div>\r\n                    <img\r\n                        src='/images/hero1.jpg'\r\n                        alt='hero'\r\n                        style={{\r\n                            display: \"block\",\r\n                            width: \"100%\",\r\n                            maxHeight: 500,\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <img\r\n                        src='/images/hero2.jpg'\r\n                        alt='hero'\r\n                        style={{\r\n                            display: \"block\",\r\n                            width: \"100%\",\r\n                            maxHeight: 500,\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <img\r\n                        src='/images/hero3.jpg'\r\n                        alt='hero'\r\n                        style={{\r\n                            display: \"block\",\r\n                            width: \"100%\",\r\n                            maxHeight: 500,\r\n                        }}\r\n                    />\r\n                </div>\r\n            </Slider>\r\n\r\n            <Box display='flex' justifyContent='center' sx={{ p: 4 }}>\r\n                <Typography variant='h1'>Welcome to the shop</Typography>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\n","import { ComponentType } from \"react\";\r\nimport {\r\n    Redirect,\r\n    Route,\r\n    RouteComponentProps,\r\n    RouteProps,\r\n} from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useAppSelector } from \"../store/configureStore\";\r\n\r\ninterface Props extends RouteProps {\r\n    component: ComponentType<RouteComponentProps<any>> | ComponentType<any>;\r\n    roles?: string[];\r\n}\r\n\r\nexport default function PrivateRoute({\r\n    component: Component,\r\n    roles,\r\n    ...rest\r\n}: Props) {\r\n    const { user } = useAppSelector((state) => state.account);\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => {\r\n                if (!user) {\r\n                    return (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/login\",\r\n                                state: { from: props.location },\r\n                            }}\r\n                        />\r\n                    );\r\n                }\r\n\r\n                if (roles && !roles?.some((r) => user.roles?.includes(r))) {\r\n                    toast.error(\"Not authorized to access this area\");\r\n                    return (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/catalog\",\r\n                            }}\r\n                        />\r\n                    );\r\n                }\r\n\r\n                return <Component {...props} />;\r\n            }}\r\n        />\r\n    );\r\n}\r\n","import { LoadingButton } from \"@mui/lab\";\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    CardMedia,\r\n    Typography,\r\n} from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { currencyFormat } from \"../../app/util/util\";\r\nimport { addBasketItemAsync } from \"../basket/basketSlice\";\r\n\r\ninterface Props {\r\n    product: Product;\r\n}\r\n\r\nexport default function ProductCard({ product }: Props) {\r\n    const { status } = useAppSelector((state) => state.basket);\r\n    const dispatch = useAppDispatch();\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar sx={{ bgcolor: \"secondary.main\" }}>\r\n                        {product.name.charAt(0).toUpperCase()}\r\n                    </Avatar>\r\n                }\r\n                title={product.name}\r\n                titleTypographyProps={{\r\n                    sx: { fontWeight: \"bold\", color: \"primary.main\" },\r\n                }}\r\n            />\r\n            <CardMedia\r\n                sx={{\r\n                    height: 140,\r\n                    backgroundSize: \"contain\",\r\n                    bgcolor: \"primary.light\",\r\n                }}\r\n                image={product.pictureUrl}\r\n                title={product.name}\r\n            />\r\n            <CardContent>\r\n                <Typography gutterBottom color='secondary' variant='h5'>\r\n                    {currencyFormat(product.price)}\r\n                </Typography>\r\n                <Typography variant='body2' color='text.secondary'>\r\n                    {product.brand} / {product.brand}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <LoadingButton\r\n                    loading={status.includes(\"pendingAddItem\" + product.id)}\r\n                    onClick={() =>\r\n                        dispatch(addBasketItemAsync({ productId: product.id }))\r\n                    }\r\n                    size='small'\r\n                >\r\n                    Add to cart\r\n                </LoadingButton>\r\n                <Button\r\n                    component={Link}\r\n                    to={`/catalog/${product.id}`}\r\n                    size='small'\r\n                >\r\n                    View\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n","import {\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    Grid,\r\n    Skeleton,\r\n} from \"@mui/material\";\r\n\r\nexport default function ProductCardSkeleton() {\r\n    return (\r\n        <Grid item xs component={Card}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Skeleton\r\n                        animation='wave'\r\n                        variant='circular'\r\n                        width={40}\r\n                        height={40}\r\n                    />\r\n                }\r\n                title={\r\n                    <Skeleton\r\n                        animation='wave'\r\n                        height={10}\r\n                        width='80%'\r\n                        style={{ marginBottom: 6 }}\r\n                    />\r\n                }\r\n            />\r\n            <Skeleton\r\n                sx={{ height: 190 }}\r\n                animation='wave'\r\n                variant='rectangular'\r\n            />\r\n            <CardContent>\r\n                <>\r\n                    <Skeleton\r\n                        animation='wave'\r\n                        height={10}\r\n                        style={{ marginBottom: 6 }}\r\n                    />\r\n                    <Skeleton animation='wave' height={10} width='80%' />\r\n                </>\r\n            </CardContent>\r\n            <CardActions>\r\n                <>\r\n                    <Skeleton animation='wave' height={10} width='40%' />\r\n                    <Skeleton animation='wave' height={10} width='20%' />\r\n                </>\r\n            </CardActions>\r\n        </Grid>\r\n    );\r\n}\r\n","import { Grid } from \"@mui/material\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport ProductCardSkeleton from \"../catalog/ProductCardSkeleton\";\r\n\r\ninterface Props {\r\n    products: Product[];\r\n}\r\n\r\nexport default function ProductList({ products }: Props) {\r\n    const { productsLoaded } = useAppSelector((state) => state.catalog);\r\n    return (\r\n        <Grid container spacing={4}>\r\n            {products.map((product) => (\r\n                <Grid item xs={4} key={product.id}>\r\n                    {!productsLoaded ? (\r\n                        <ProductCardSkeleton />\r\n                    ) : (\r\n                        <ProductCard key={product.id} product={product} />\r\n                    )}\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    );\r\n}\r\n","import { debounce, TextField } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { setProductParams } from \"./catalogSlice\";\r\n\r\nexport default function ProductSearch() {\r\n    const { productParams } = useAppSelector((state) => state.catalog);\r\n    const [searchTerm, setSearchTerm] = useState(productParams.searchTerm);\r\n    const dispatch = useAppDispatch();\r\n\r\n    const debouncedSearch = debounce((event: any) => {\r\n        dispatch(setProductParams({ searchTerm: event.target.value }));\r\n    }, 1000);\r\n\r\n    return (\r\n        <TextField\r\n            label='Search products'\r\n            variant='outlined'\r\n            fullWidth\r\n            value={searchTerm || \"\"}\r\n            onChange={(event: any) => {\r\n                setSearchTerm(event.target.value);\r\n                debouncedSearch(event);\r\n            }}\r\n        />\r\n    );\r\n}\r\n","import { Backdrop, Box, CircularProgress, Typography } from \"@mui/material\";\r\n\r\ninterface Props {\r\n    message?: string;\r\n}\r\n\r\nexport default function LoadingComponent({ message = \"Loading...\" }: Props) {\r\n    return (\r\n        <Backdrop open={true} invisible={true}>\r\n            <Box\r\n                display='flex'\r\n                justifyContent='center'\r\n                alignItems='center'\r\n                height='100vh'\r\n            >\r\n                <CircularProgress size={100} color='secondary' />\r\n                <Typography\r\n                    variant='h4'\r\n                    sx={{\r\n                        justifyContent: \"center\",\r\n                        position: \"fixed\",\r\n                        top: \"60%\",\r\n                    }}\r\n                >\r\n                    {message}\r\n                </Typography>\r\n            </Box>\r\n        </Backdrop>\r\n    );\r\n}\r\n","import {\r\n    FormControl,\r\n    RadioGroup,\r\n    FormControlLabel,\r\n    Radio,\r\n} from \"@mui/material\";\r\n\r\ninterface Props {\r\n    options: any[];\r\n    onChange: (event: any) => void;\r\n    selectedValue: string;\r\n}\r\n\r\nexport default function RadioButtonGroup({\r\n    options,\r\n    onChange,\r\n    selectedValue,\r\n}: Props) {\r\n    return (\r\n        <FormControl component='fieldset'>\r\n            <RadioGroup onChange={onChange} value={selectedValue}>\r\n                {options.map(({ value, label }) => (\r\n                    <FormControlLabel\r\n                        value={value}\r\n                        control={<Radio />}\r\n                        label={label}\r\n                        key={value}\r\n                    />\r\n                ))}\r\n            </RadioGroup>\r\n        </FormControl>\r\n    );\r\n}\r\n","import { FormGroup, FormControlLabel, Checkbox } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\n\r\ninterface Props {\r\n    items: string[];\r\n    checked?: string[];\r\n    onChange: (items: string[]) => void;\r\n}\r\n\r\nexport default function CheckboxButtons({ items, checked, onChange }: Props) {\r\n    const [checkedItems, setCheckedItems] = useState(checked || []);\r\n\r\n    function handleChecked(value: string) {\r\n        const currentIndex = checkedItems.findIndex((item) => item === value);\r\n        let newChecked: string[] = [];\r\n        if (currentIndex === -1) newChecked = [...checkedItems, value];\r\n        else newChecked = checkedItems.filter((item) => item !== value);\r\n        setCheckedItems(newChecked);\r\n        onChange(newChecked);\r\n    }\r\n\r\n    return (\r\n        <FormGroup>\r\n            {items.map((item) => (\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox\r\n                            checked={checkedItems.indexOf(item) !== -1}\r\n                            onClick={() => handleChecked(item)}\r\n                        />\r\n                    }\r\n                    label={item}\r\n                    key={item}\r\n                />\r\n            ))}\r\n        </FormGroup>\r\n    );\r\n}\r\n","import { Box, Pagination, Typography } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { MetaData } from \"../models/pagination\";\r\n\r\ninterface Props {\r\n    metaData: MetaData;\r\n    onPageChange: (page: number) => void;\r\n}\r\n\r\nexport default function AppPagination({ metaData, onPageChange }: Props) {\r\n    const { currentPage, totalCount, totalPages, pageSize } = metaData;\r\n    const [pageNumber, setPageNumber] = useState(currentPage);\r\n\r\n    function handlePageChange(page: number) {\r\n        setPageNumber(page);\r\n        onPageChange(page);\r\n    }\r\n\r\n    return (\r\n        <Box display='flex' justifyContent='space-between' alignItems='center'>\r\n            <Typography>\r\n                Displaying {(currentPage - 1) * pageSize + 1}-\r\n                {currentPage * pageSize > totalCount\r\n                    ? totalCount\r\n                    : currentPage * pageSize}{\" \"}\r\n                of {totalCount} items\r\n            </Typography>\r\n            <Pagination\r\n                color='secondary'\r\n                size='large'\r\n                count={totalPages}\r\n                page={pageNumber}\r\n                onChange={(e, page) => handlePageChange(page)}\r\n            />\r\n        </Box>\r\n    );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport {\r\n    productSelectors,\r\n    fetchProductsAsync,\r\n    fetchFilters,\r\n} from \"../../features/catalog/catalogSlice\";\r\nimport { useAppSelector, useAppDispatch } from \"../store/configureStore\";\r\n\r\nexport default function useProducts() {\r\n    const products = useAppSelector(productSelectors.selectAll);\r\n    const { productsLoaded, filtersLoaded, brands, types, metaData } =\r\n        useAppSelector((state) => state.catalog);\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!productsLoaded) dispatch(fetchProductsAsync());\r\n    }, [productsLoaded, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (!filtersLoaded) dispatch(fetchFilters());\r\n    }, [dispatch, filtersLoaded]);\r\n\r\n    return {\r\n        products,\r\n        productsLoaded,\r\n        filtersLoaded,\r\n        brands,\r\n        types,\r\n        metaData,\r\n    };\r\n}\r\n","import ProductList from \"./ProductList\";\r\nimport ProductSearch from \"./ProductSearch\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport RadioButtonGroup from \"../../app/components/RadioButtonGroup\";\r\nimport CheckboxButtons from \"../../app/components/CheckboxButtons\";\r\nimport AppPagination from \"../../app/components/AppPagination\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { setPageNumber, setProductParams } from \"./catalogSlice\";\r\nimport { Grid, Paper } from \"@mui/material\";\r\nimport useProducts from \"../../app/hooks/useProducts\";\r\n\r\nconst sortOptions = [\r\n    { value: \"name\", label: \"Alphabetical\" },\r\n    { value: \"priceDesc\", label: \"Price - High to low\" },\r\n    { value: \"price\", label: \"Price - Low to high\" },\r\n];\r\n\r\nexport default function Catalog() {\r\n    const { products, brands, types, filtersLoaded, metaData } = useProducts();\r\n    const { productParams } = useAppSelector((state) => state.catalog);\r\n    const dispatch = useAppDispatch();\r\n\r\n    if (!filtersLoaded)\r\n        return <LoadingComponent message='Loading products...' />;\r\n\r\n    return (\r\n        <Grid container columnSpacing={4}>\r\n            <Grid item xs={3}>\r\n                <Paper sx={{ mb: 2 }}>\r\n                    <ProductSearch />\r\n                </Paper>\r\n                <Paper sx={{ mb: 2, p: 2 }}>\r\n                    <RadioButtonGroup\r\n                        selectedValue={productParams.orderBy}\r\n                        options={sortOptions}\r\n                        onChange={(e) =>\r\n                            dispatch(\r\n                                setProductParams({ orderBy: e.target.value })\r\n                            )\r\n                        }\r\n                    />\r\n                </Paper>\r\n                <Paper sx={{ mb: 2, p: 2 }}>\r\n                    <CheckboxButtons\r\n                        items={brands}\r\n                        checked={productParams.brands}\r\n                        onChange={(items: string[]) =>\r\n                            dispatch(setProductParams({ brands: items }))\r\n                        }\r\n                    />\r\n                </Paper>\r\n                <Paper sx={{ mb: 2, p: 2 }}>\r\n                    <CheckboxButtons\r\n                        items={types}\r\n                        checked={productParams.types}\r\n                        onChange={(items: string[]) =>\r\n                            dispatch(setProductParams({ types: items }))\r\n                        }\r\n                    />\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n                <ProductList products={products} />\r\n            </Grid>\r\n            <Grid item xs={3} />\r\n            <Grid item xs={9} sx={{ mb: 2 }}>\r\n                {metaData && (\r\n                    <AppPagination\r\n                        metaData={metaData}\r\n                        onPageChange={(page: number) =>\r\n                            dispatch(setPageNumber({ pageNumber: page }))\r\n                        }\r\n                    />\r\n                )}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <Container component={Paper} sx={{ height: 400 }}>\r\n            <Typography gutterBottom variant='h3'>\r\n                Oops - we could not find what you are looking for\r\n            </Typography>\r\n            <Divider />\r\n            <Button fullWidth component={Link} to='catalog'>\r\n                Go back to Shop\r\n            </Button>\r\n        </Container>\r\n    );\r\n}\r\n","import { LoadingButton } from \"@mui/lab\";\r\nimport {\r\n    Divider,\r\n    Grid,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableRow,\r\n    TextField,\r\n    Typography,\r\n} from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport NotFound from \"../../app/errors/NotFound\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport {\r\n    addBasketItemAsync,\r\n    removeBasketItemAsync,\r\n} from \"../basket/basketSlice\";\r\nimport { fetchProductAsync, productSelectors } from \"./catalogSlice\";\r\n\r\nexport default function ProductDetails() {\r\n    const { basket, status } = useAppSelector((state) => state.basket);\r\n    const dispatch = useAppDispatch();\r\n    const { id } = useParams<{ id: string }>();\r\n    const product = useAppSelector((state) =>\r\n        productSelectors.selectById(state, id)\r\n    );\r\n    const { status: productStatus } = useAppSelector((state) => state.catalog);\r\n    const [quantity, setQuantity] = useState(0);\r\n    const item = basket?.items.find((i) => i.productId === product?.id);\r\n\r\n    useEffect(() => {\r\n        if (item) setQuantity(item.quantity);\r\n        if (!product) dispatch(fetchProductAsync(parseInt(id)));\r\n    }, [id, item, dispatch, product]);\r\n\r\n    function handleInputChange(event: any) {\r\n        if (event.target.value >= 0) {\r\n            setQuantity(parseInt(event.target.value));\r\n        }\r\n    }\r\n\r\n    function handleUpdateCart() {\r\n        if (!item || quantity > item.quantity) {\r\n            const updatedQuantity = item ? quantity - item.quantity : quantity;\r\n            dispatch(\r\n                addBasketItemAsync({\r\n                    productId: product?.id!,\r\n                    quantity: updatedQuantity,\r\n                })\r\n            );\r\n        } else {\r\n            const updatedQuantity = item.quantity - quantity;\r\n            dispatch(\r\n                removeBasketItemAsync({\r\n                    productId: product?.id!,\r\n                    quantity: updatedQuantity,\r\n                })\r\n            );\r\n        }\r\n    }\r\n\r\n    if (productStatus.includes(\"pending\"))\r\n        return <LoadingComponent message='Loading product...' />;\r\n\r\n    if (!product) return <NotFound />;\r\n\r\n    return (\r\n        <Grid container spacing={6}>\r\n            <Grid item xs={6}>\r\n                <img\r\n                    src={product.pictureUrl}\r\n                    alt={product.name}\r\n                    style={{ width: \"100%\" }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Typography variant='h3'>{product.name}</Typography>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant='h4' color='secondary'>\r\n                    $ {(product.price / 100).toFixed(2)}\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>{product.name}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Description</TableCell>\r\n                                <TableCell>{product.description}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Type</TableCell>\r\n                                <TableCell>{product.type}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Brand</TableCell>\r\n                                <TableCell>{product.brand}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Quantity in stock</TableCell>\r\n                                <TableCell>{product.quantityInStock}</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            onChange={handleInputChange}\r\n                            variant='outlined'\r\n                            type='number'\r\n                            label='Quantity in Cart'\r\n                            fullWidth\r\n                            value={quantity}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <LoadingButton\r\n                            disabled={\r\n                                item?.quantity === quantity ||\r\n                                (!item && quantity === 0)\r\n                            }\r\n                            loading={status.includes(\"pending\")}\r\n                            onClick={handleUpdateCart}\r\n                            sx={{ height: \"55px\" }}\r\n                            color='primary'\r\n                            size='large'\r\n                            variant='contained'\r\n                            fullWidth\r\n                        >\r\n                            {item ? \"Update Quantity\" : \"Add to Cart\"}\r\n                        </LoadingButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n","import {\r\n    Alert,\r\n    AlertTitle,\r\n    Button,\r\n    ButtonGroup,\r\n    Container,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    Typography,\r\n} from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\n\r\nexport default function AboutPage() {\r\n    const [validationErrors, setValidationErrors] = useState<string[]>([]);\r\n\r\n    function getValidationError() {\r\n        agent.TestErrors.getValidationError()\r\n            .then(() => console.log(\"should not see this\"))\r\n            .catch((error) => setValidationErrors(error));\r\n    }\r\n    return (\r\n        <Container>\r\n            <Typography gutterBottom variant='h2'>\r\n                Errors for testing purposes\r\n            </Typography>\r\n            <ButtonGroup fullWidth>\r\n                <Button\r\n                    variant='contained'\r\n                    onClick={() =>\r\n                        agent.TestErrors.get400Error().catch((error) =>\r\n                            console.log(error)\r\n                        )\r\n                    }\r\n                >\r\n                    Test 400 Error\r\n                </Button>\r\n                <Button\r\n                    variant='contained'\r\n                    onClick={() =>\r\n                        agent.TestErrors.get401Error().catch((error) =>\r\n                            console.log(error)\r\n                        )\r\n                    }\r\n                >\r\n                    Test 401 Error\r\n                </Button>\r\n                <Button\r\n                    variant='contained'\r\n                    onClick={() =>\r\n                        agent.TestErrors.get404Error().catch((error) =>\r\n                            console.log(error)\r\n                        )\r\n                    }\r\n                >\r\n                    Test 404 Error\r\n                </Button>\r\n                <Button\r\n                    variant='contained'\r\n                    onClick={() =>\r\n                        agent.TestErrors.get500Error().catch((error) =>\r\n                            console.log(error)\r\n                        )\r\n                    }\r\n                >\r\n                    Test 500 Error\r\n                </Button>\r\n                <Button variant='contained' onClick={getValidationError}>\r\n                    Test Validation Error\r\n                </Button>\r\n            </ButtonGroup>\r\n            {validationErrors.length > 0 && (\r\n                <Alert severity='error'>\r\n                    <AlertTitle>Validation Errors</AlertTitle>\r\n                    <List>\r\n                        {validationErrors.map((error) => (\r\n                            <ListItem key={error}>\r\n                                <ListItemText>{error}</ListItemText>\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Alert>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n","import { Button, ButtonGroup, Typography } from \"@mui/material\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { decrement, increment } from \"./counterSlice\";\r\n\r\nexport default function ContactPage() {\r\n    const dispatch = useAppDispatch();\r\n    const { data, title } = useAppSelector((state) => state.counter);\r\n    return (\r\n        <>\r\n            <Typography variant='h2'>{title}</Typography>\r\n            <Typography variant='h5'>The data is: {data}</Typography>\r\n            <ButtonGroup>\r\n                <Button\r\n                    onClick={() => dispatch(decrement(1))}\r\n                    variant='contained'\r\n                    color='error'\r\n                >\r\n                    Decrement\r\n                </Button>\r\n                <Button\r\n                    onClick={() => dispatch(increment(1))}\r\n                    variant='contained'\r\n                    color='primary'\r\n                >\r\n                    Increment\r\n                </Button>\r\n                <Button\r\n                    onClick={() => dispatch(increment(5))}\r\n                    variant='contained'\r\n                    color='secondary'\r\n                >\r\n                    Increment by 5\r\n                </Button>\r\n            </ButtonGroup>\r\n        </>\r\n    );\r\n}\r\n","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nexport default function ServerError() {\r\n    const history = useHistory();\r\n    const { state } = useLocation<any>();\r\n    return (\r\n        <Container component={Paper}>\r\n            {state?.error ? (\r\n                <>\r\n                    <Typography variant='h3' color='error' gutterBottom>\r\n                        {state.error.title}\r\n                    </Typography>\r\n                    <Divider />\r\n                    <Typography>\r\n                        {state.error.detail || \"Internal server error\"}\r\n                    </Typography>\r\n                </>\r\n            ) : (\r\n                <Typography variant='h5' gutterBottom>\r\n                    Server Error\r\n                </Typography>\r\n            )}\r\n            <Button onClick={() => history.push(\"/catalog\")}>\r\n                Go back to the store\r\n            </Button>\r\n        </Container>\r\n    );\r\n}\r\n","import {\r\n    TableContainer,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableRow,\r\n    TableCell,\r\n} from \"@mui/material\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport { currencyFormat } from \"../../app/util/util\";\r\n\r\ninterface Props {\r\n    subtotal?: number;\r\n}\r\n\r\nexport default function BasketSummary({ subtotal }: Props) {\r\n    const { basket } = useAppSelector((state) => state.basket);\r\n\r\n    if (subtotal === undefined)\r\n        subtotal =\r\n            basket?.items.reduce(\r\n                (sum, item) => sum + item.quantity * item.price,\r\n                0\r\n            ) ?? 0;\r\n    const deliveryFee = subtotal > 10000 ? 0 : 500;\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper} variant={\"outlined\"}>\r\n                <Table>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Subtotal</TableCell>\r\n                            <TableCell align='right'>\r\n                                {currencyFormat(subtotal)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Delivery fee*</TableCell>\r\n                            <TableCell align='right'>\r\n                                {currencyFormat(deliveryFee)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Total</TableCell>\r\n                            <TableCell align='right'>\r\n                                {currencyFormat(subtotal + deliveryFee)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>\r\n                                <span style={{ fontStyle: \"italic\" }}>\r\n                                    *Orders over $100 qualify for free delivery\r\n                                </span>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    );\r\n}\r\n","import { Remove, Add, Delete } from \"@mui/icons-material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Box } from \"@mui/material\";\r\nimport { BasketItem } from \"../../app/models/basket\";\r\nimport { useAppSelector, useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { currencyFormat } from \"../../app/util/util\";\r\nimport { removeBasketItemAsync, addBasketItemAsync } from \"./basketSlice\";\r\n\r\ninterface Props {\r\n    items: BasketItem[];\r\n    isBasket?: boolean;\r\n}\r\n\r\nexport default function BasketTable({items, isBasket = true}: Props) {\r\n    const { status } = useAppSelector((state) => state.basket);\r\n    const dispatch = useAppDispatch();\r\n    return (\r\n        <TableContainer component={Paper}>\r\n                <Table sx={{ minWidth: 650 }}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Product</TableCell>\r\n                            <TableCell align='right'>Price</TableCell>\r\n                            <TableCell align='center'>Quantity</TableCell>\r\n                            <TableCell align='right'>Subtotal</TableCell>\r\n                            {isBasket &&\r\n                            <TableCell align='right'></TableCell>}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {items.map((item) => (\r\n                            <TableRow\r\n                                key={item.productId}\r\n                                sx={{\r\n                                    \"&:last-child td, &:last-child th\": {\r\n                                        border: 0,\r\n                                    },\r\n                                }}\r\n                            >\r\n                                <TableCell component='th' scope='row'>\r\n                                    <Box display='flex' alignItems='center'>\r\n                                        <img\r\n                                            src={item.pictureUrl}\r\n                                            alt={item.name}\r\n                                            style={{\r\n                                                height: 50,\r\n                                                marginRight: 20,\r\n                                            }}\r\n                                        />\r\n                                        <span>{item.name}</span>\r\n                                    </Box>\r\n                                </TableCell>\r\n                                <TableCell align='right'>\r\n                                    {currencyFormat(item.price)}\r\n                                </TableCell>\r\n                                <TableCell align='center'>\r\n                                {isBasket &&\r\n                                    <LoadingButton\r\n                                        loading={\r\n                                            status ===\r\n                                            \"pendingRemoveItem\" +\r\n                                                item.productId +\r\n                                                \"rem\"\r\n                                        }\r\n                                        onClick={() =>\r\n                                            dispatch(\r\n                                                removeBasketItemAsync({\r\n                                                    productId: item.productId,\r\n                                                    quantity: 1,\r\n                                                    name: \"rem\",\r\n                                                })\r\n                                            )\r\n                                        }\r\n                                        color='error'\r\n                                    >\r\n                                        <Remove />\r\n                                    </LoadingButton>}\r\n                                    {item.quantity}\r\n                                    {isBasket &&\r\n                                    <LoadingButton\r\n                                        loading={\r\n                                            status ===\r\n                                            \"pendingAddItem\" + item.productId\r\n                                        }\r\n                                        onClick={() =>\r\n                                            dispatch(\r\n                                                addBasketItemAsync({\r\n                                                    productId: item.productId,\r\n                                                })\r\n                                            )\r\n                                        }\r\n                                        color='secondary'\r\n                                    >\r\n                                        <Add />\r\n                                    </LoadingButton>}\r\n                                </TableCell>\r\n                                <TableCell align='right'>\r\n                                    {currencyFormat(item.price * item.quantity)}\r\n                                </TableCell>\r\n                                {isBasket &&\r\n                                <TableCell align='right'>\r\n                                    <LoadingButton\r\n                                        loading={\r\n                                            status ===\r\n                                            \"pendingRemoveItem\" +\r\n                                                item.productId +\r\n                                                \"del\"\r\n                                        }\r\n                                        onClick={() =>\r\n                                            dispatch(\r\n                                                removeBasketItemAsync({\r\n                                                    productId: item.productId,\r\n                                                    quantity: item.quantity,\r\n                                                    name: \"del\",\r\n                                                })\r\n                                            )\r\n                                        }\r\n                                        color='error'\r\n                                    >\r\n                                        <Delete />\r\n                                    </LoadingButton>\r\n                                </TableCell>}\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n    )\r\n}","import {\r\n    Button,\r\n    Grid,\r\n    Typography,\r\n} from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport BasketSummary from \"./BasketSummary\";\r\nimport BasketTable from \"./BasketTable\";\r\n\r\nexport default function BasketPage() {\r\n    const { basket } = useAppSelector((state) => state.basket);\r\n\r\n    if (!basket)\r\n        return <Typography variant='h3'>Your basket is empty</Typography>;\r\n\r\n    return (\r\n        <>\r\n            <BasketTable items={basket.items} />\r\n            <Grid container>\r\n                <Grid item xs={6} />\r\n                <Grid item xs={6}>\r\n                    <BasketSummary />\r\n                    <Button\r\n                        component={Link}\r\n                        to='/checkout'\r\n                        variant='contained'\r\n                        size='large'\r\n                        fullWidth\r\n                    >\r\n                        Ceckout\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { Paper } from \"@mui/material\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { FieldValues, useForm } from \"react-hook-form\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { signInUser } from \"./accountSlice\";\r\n\r\nexport default function Login() {\r\n    const history = useHistory();\r\n    const location = useLocation<any>();\r\n    const dispatch = useAppDispatch();\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { isSubmitting, errors, isValid },\r\n    } = useForm({\r\n        mode: \"all\",\r\n    });\r\n\r\n    async function submitForm(data: FieldValues) {\r\n        try {\r\n            await dispatch(signInUser(data));\r\n            history.push(location.state?.from?.pathname || \"/catalog\");\r\n        } catch (error: any) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container\r\n            component={Paper}\r\n            maxWidth='sm'\r\n            sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                p: 4,\r\n            }}\r\n        >\r\n            <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component='h1' variant='h5'>\r\n                Sign in\r\n            </Typography>\r\n            <Box\r\n                component='form'\r\n                onSubmit={handleSubmit(submitForm)}\r\n                noValidate\r\n                sx={{ mt: 1 }}\r\n            >\r\n                <TextField\r\n                    margin='normal'\r\n                    fullWidth\r\n                    label='Username'\r\n                    autoComplete='email'\r\n                    autoFocus\r\n                    {...register(\"username\", {\r\n                        required: \"Username is required\",\r\n                    })}\r\n                    error={!!errors.username}\r\n                    helperText={errors?.username?.message}\r\n                />\r\n                <TextField\r\n                    margin='normal'\r\n                    fullWidth\r\n                    label='Password'\r\n                    type='password'\r\n                    autoComplete='current-password'\r\n                    {...register(\"password\", {\r\n                        required: \"Password is required\",\r\n                    })}\r\n                    error={!!errors.password}\r\n                    helperText={errors?.password?.message}\r\n                />\r\n                <LoadingButton\r\n                    disabled={!isValid}\r\n                    loading={isSubmitting}\r\n                    type='submit'\r\n                    fullWidth\r\n                    variant='contained'\r\n                    sx={{ mt: 3, mb: 2 }}\r\n                >\r\n                    Sign In\r\n                </LoadingButton>\r\n                <Grid container>\r\n                    <Grid item>\r\n                        <Link to='/register'>\r\n                            {\"Don't have an account? Sign Up\"}\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n","import Avatar from \"@mui/material/Avatar\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { Paper } from \"@mui/material\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function Register() {\r\n    const history = useHistory();\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        setError,\r\n        formState: { isSubmitting, errors, isValid },\r\n    } = useForm({\r\n        mode: \"all\",\r\n    });\r\n\r\n    function handleApiErrors(errors: any) {\r\n        if (errors) {\r\n            errors.forEach((error: string) => {\r\n                if (error.includes(\"Password\")) {\r\n                    setError(\"password\", { message: error });\r\n                } else if (error.includes(\"Email\")) {\r\n                    setError(\"email\", { message: error });\r\n                } else if (error.includes(\"Username\")) {\r\n                    setError(\"username\", { message: error });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container\r\n            component={Paper}\r\n            maxWidth='sm'\r\n            sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                p: 4,\r\n            }}\r\n        >\r\n            <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component='h1' variant='h5'>\r\n                Register\r\n            </Typography>\r\n            <Box\r\n                component='form'\r\n                onSubmit={handleSubmit((data) =>\r\n                    agent.Account.register(data)\r\n                        .then(() => {\r\n                            toast.success(\r\n                                \"Registration successful - you can now login\"\r\n                            );\r\n                            history.push(\"/login\");\r\n                        })\r\n                        .catch((error) => handleApiErrors(error))\r\n                )}\r\n                noValidate\r\n                sx={{ mt: 1 }}\r\n            >\r\n                <TextField\r\n                    margin='normal'\r\n                    fullWidth\r\n                    label='Username'\r\n                    autoComplete='email'\r\n                    autoFocus\r\n                    {...register(\"username\", {\r\n                        required: \"Username is required\",\r\n                    })}\r\n                    error={!!errors.username}\r\n                    helperText={errors?.username?.message}\r\n                />\r\n                <TextField\r\n                    margin='normal'\r\n                    fullWidth\r\n                    label='Email address'\r\n                    autoComplete='email'\r\n                    {...register(\"email\", {\r\n                        required: \"Email is required\",\r\n                        pattern: {\r\n                            value: /^\\w+[\\w-.]*@\\w+((-\\w+)|(\\w*))\\.[a-z]{2,3}$/,\r\n                            message: \"Not a valid email address\",\r\n                        },\r\n                    })}\r\n                    error={!!errors.email}\r\n                    helperText={errors?.email?.message}\r\n                />\r\n                <TextField\r\n                    margin='normal'\r\n                    fullWidth\r\n                    label='Password'\r\n                    type='password'\r\n                    autoComplete='current-password'\r\n                    {...register(\"password\", {\r\n                        required: \"Password is required\",\r\n                        pattern: {\r\n                            value: /(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$/,\r\n                            message:\r\n                                \"Password does not meet complexity requirement\",\r\n                        },\r\n                    })}\r\n                    error={!!errors.password}\r\n                    helperText={errors?.password?.message}\r\n                />\r\n                <LoadingButton\r\n                    disabled={!isValid}\r\n                    loading={isSubmitting}\r\n                    type='submit'\r\n                    fullWidth\r\n                    variant='contained'\r\n                    sx={{ mt: 3, mb: 2 }}\r\n                >\r\n                    Register\r\n                </LoadingButton>\r\n                <Grid container>\r\n                    <Grid item>\r\n                        <Link to='/login'>\r\n                            {\"Already have an account? Sign In\"}\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n","import { Button, Grid, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { BasketItem } from \"../../app/models/basket\";\r\nimport { Order } from \"../../app/models/order\";\r\nimport BasketSummary from \"../basket/BasketSummary\";\r\nimport BasketTable from \"../basket/BasketTable\";\r\n\r\ninterface Props {\r\n    order: Order;\r\n    setSelectedOrder: (id: number) => void;\r\n}\r\n\r\nexport default function OrderDetailed({ order, setSelectedOrder }: Props) {\r\n    const subtotal =\r\n        order.orderItems.reduce(\r\n            (sum, item) => sum + item.quantity * item.price,\r\n            0\r\n        ) ?? 0;\r\n    return (\r\n        <>\r\n            <Box display='flex' justifyContent='space-between'>\r\n                <Typography sx={{ p: 2 }} gutterBottom variant='h4'>\r\n                    Order# {order.id} - {order.orderStatus}\r\n                </Typography>\r\n                <Button\r\n                    onClick={() => setSelectedOrder(0)}\r\n                    sx={{ m: 2 }}\r\n                    size='large'\r\n                    variant='contained'\r\n                >\r\n                    Back to order\r\n                </Button>\r\n            </Box>\r\n            <BasketTable\r\n                items={order.orderItems as BasketItem[]}\r\n                isBasket={false}\r\n            />\r\n            <Grid container>\r\n                <Grid item xs={6} />\r\n                <Grid item xs={6}>\r\n                    <BasketSummary subtotal={subtotal} />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","import {\r\n    TableContainer,\r\n    Paper,\r\n    Table,\r\n    TableHead,\r\n    TableRow,\r\n    TableCell,\r\n    TableBody,\r\n    Button,\r\n} from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { Order } from \"../../app/models/order\";\r\nimport { currencyFormat } from \"../../app/util/util\";\r\nimport OrderDetailed from \"../orders/OrderDetailed\";\r\n\r\nexport default function Orders() {\r\n    const [orders, setOrders] = useState<Order[] | null>(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [selectedOrderNumber, setSelectedOrderNumber] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        agent.Orders.list()\r\n            .then((orders) => setOrders(orders))\r\n            .catch((error) => console.log(error))\r\n            .finally(() => setLoading(false));\r\n    }, []);\r\n\r\n    if (loading) return <LoadingComponent message='Loading orders...' />;\r\n\r\n    if (selectedOrderNumber > 0)\r\n        return (\r\n            <OrderDetailed\r\n                order={orders?.find((o) => o.id === selectedOrderNumber)!}\r\n                setSelectedOrder={setSelectedOrderNumber}\r\n            />\r\n        );\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }} aria-label='simple table'>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Order number</TableCell>\r\n                        <TableCell align='right'>Total</TableCell>\r\n                        <TableCell align='right'>Order Date</TableCell>\r\n                        <TableCell align='right'>Order Status</TableCell>\r\n                        <TableCell align='right'></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {orders?.map((order) => (\r\n                        <TableRow\r\n                            key={order.id}\r\n                            sx={{\r\n                                \"&:last-child td, &:last-child th\": {\r\n                                    border: 0,\r\n                                },\r\n                            }}\r\n                        >\r\n                            <TableCell component='th' scope='row'>\r\n                                {order.id}\r\n                            </TableCell>\r\n                            <TableCell align='right'>\r\n                                {currencyFormat(order.total)}\r\n                            </TableCell>\r\n                            <TableCell align='right'>\r\n                                {order.orderDate.split(\"T\")[0]}\r\n                            </TableCell>\r\n                            <TableCell align='right'>\r\n                                {order.orderStatus}\r\n                            </TableCell>\r\n                            <TableCell align='right'>\r\n                                <Button\r\n                                    onClick={() =>\r\n                                        setSelectedOrderNumber(order.id)\r\n                                    }\r\n                                >\r\n                                    View\r\n                                </Button>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n","import { Checkbox, FormControlLabel } from \"@mui/material\";\r\nimport { useController, UseControllerProps } from \"react-hook-form\";\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string;\r\n    disabled: boolean;\r\n}\r\n\r\nexport default function AppCheckbox(props: Props) {\r\n    const { field } = useController({ ...props, defaultValue: false });\r\n\r\n    return (\r\n        <FormControlLabel\r\n            control={\r\n                <Checkbox\r\n                    {...field}\r\n                    checked={field.value}\r\n                    color='secondary'\r\n                    disabled={props.disabled}\r\n                />\r\n            }\r\n            label={props.label}\r\n        />\r\n    );\r\n}\r\n","import { TextField } from \"@mui/material\";\r\nimport { useController, UseControllerProps } from \"react-hook-form\";\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string;\r\n    multiline?: boolean;\r\n    rows?: number;\r\n    type?: string;\r\n}\r\n\r\nexport default function AppTextInput(props: Props) {\r\n    const { fieldState, field } = useController({ ...props, defaultValue: \"\" });\r\n    return (\r\n        <TextField\r\n            {...props}\r\n            {...field}\r\n            multiline={props.multiline}\r\n            rows={props.rows}\r\n            type={props.type}\r\n            fullWidth\r\n            variant='outlined'\r\n            error={!!fieldState.error}\r\n            helperText={fieldState.error?.message}\r\n        />\r\n    );\r\n}\r\n","import Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport AppCheckbox from \"../../app/components/AppCheckbox\";\r\nimport { useFormContext } from \"react-hook-form\";\r\nimport AppTextInput from \"../../app/components/AppTextInput\";\r\n\r\nexport default function AddressForm() {\r\n    const { control, formState } = useFormContext();\r\n    return (\r\n        <>\r\n            <Typography variant='h6' gutterBottom>\r\n                Shipping address\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <AppTextInput\r\n                        control={control}\r\n                        name='fullName'\r\n                        label='Full name'\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppTextInput\r\n                        control={control}\r\n                        name='address1'\r\n                        label='Address 1'\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppTextInput\r\n                        control={control}\r\n                        name='address2'\r\n                        label='Address 2'\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='city' label='City' />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput\r\n                        control={control}\r\n                        name='state'\r\n                        label='State'\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='zip' label='Zip' />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput\r\n                        control={control}\r\n                        name='country'\r\n                        label='Country'\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppCheckbox\r\n                        disabled={!formState.isDirty}\r\n                        name='saveAddress'\r\n                        label='Save this as the default address'\r\n                        control={control}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","import { InputBaseComponentProps } from \"@mui/material\";\r\nimport { forwardRef, Ref, useImperativeHandle, useRef } from \"react\";\r\n\r\ninterface Props extends InputBaseComponentProps {}\r\n\r\nexport const StripeInput = forwardRef(function StripeInput(\r\n    { component: Component, ...props }: Props,\r\n    ref: Ref<unknown>\r\n) {\r\n    const elementRef = useRef<any>();\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => elementRef.current.focus,\r\n    }));\r\n\r\n    return (\r\n        <Component\r\n            onReady={(element: any) => (elementRef.current = element)}\r\n            {...props}\r\n        />\r\n    );\r\n});\r\n","import Typography from \"@mui/material/Typography\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useFormContext } from \"react-hook-form\";\r\nimport AppTextInput from \"../../app/components/AppTextInput\";\r\nimport {\r\n    CardCvcElement,\r\n    CardExpiryElement,\r\n    CardNumberElement,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { StripeInput } from \"./StripeInput\";\r\nimport { StripeElementType } from \"@stripe/stripe-js\";\r\n\r\ninterface Props {\r\n    cardState: { elementError: { [key in StripeElementType]?: string } };\r\n    onCardInputChange: (event: any) => void;\r\n}\r\n\r\nexport default function PaymentForm({ cardState, onCardInputChange }: Props) {\r\n    const { control } = useFormContext();\r\n\r\n    return (\r\n        <>\r\n            <Typography variant='h6' gutterBottom>\r\n                Payment method\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} md={6}>\r\n                    <AppTextInput\r\n                        name='nameOnCard'\r\n                        label='Name on card'\r\n                        control={control}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        onChange={onCardInputChange}\r\n                        error={!!cardState.elementError.cardNumber}\r\n                        helperText={cardState.elementError.cardNumber}\r\n                        id='cardNumber'\r\n                        label='Card number'\r\n                        fullWidth\r\n                        autoComplete='cc-number'\r\n                        variant='outlined'\r\n                        InputLabelProps={{ shrink: true }}\r\n                        InputProps={{\r\n                            inputComponent: StripeInput,\r\n                            inputProps: {\r\n                                component: CardNumberElement,\r\n                            },\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        onChange={onCardInputChange}\r\n                        error={!!cardState.elementError.cardExpiry}\r\n                        helperText={cardState.elementError.cardExpiry}\r\n                        id='expDate'\r\n                        label='Expiry date'\r\n                        fullWidth\r\n                        autoComplete='cc-exp'\r\n                        variant='outlined'\r\n                        InputLabelProps={{ shrink: true }}\r\n                        InputProps={{\r\n                            inputComponent: StripeInput,\r\n                            inputProps: {\r\n                                component: CardExpiryElement,\r\n                            },\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        onChange={onCardInputChange}\r\n                        error={!!cardState.elementError.cardCvc}\r\n                        helperText={cardState.elementError.cardCvc}\r\n                        id='cvv'\r\n                        label='CVV'\r\n                        fullWidth\r\n                        autoComplete='cc-csc'\r\n                        variant='outlined'\r\n                        InputLabelProps={{ shrink: true }}\r\n                        InputProps={{\r\n                            inputComponent: StripeInput,\r\n                            inputProps: {\r\n                                component: CardCvcElement,\r\n                            },\r\n                        }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","import { Grid } from \"@mui/material\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport BasketSummary from \"../basket/BasketSummary\";\r\nimport BasketTable from \"../basket/BasketTable\";\r\n\r\nexport default function Review() {\r\n    const {basket} = useAppSelector(state => state.basket);\r\n    return (\r\n        <>\r\n            <Typography variant='h6' gutterBottom>\r\n                Order summary\r\n            </Typography>\r\n            {basket &&\r\n            <BasketTable items={basket.items} isBasket={false}/>}\r\n            <Grid container>\r\n                <Grid item xs={6} />\r\n                <Grid item xs={6}>\r\n                    <BasketSummary />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","import * as yup from \"yup\";\r\n\r\nexport const validationSchema = [\r\n    yup.object({\r\n        fullName: yup.string().required(\"The full name is required\"),\r\n        address1: yup.string().required(\"The address line 1 is required\"),\r\n        address2: yup.string().required(\"the address line 2 is required\"),\r\n        city: yup.string().required(\"The city is required\"),\r\n        state: yup.string().required(\"The state is required\"),\r\n        zip: yup.string().required(\"The Zip is required\"),\r\n        country: yup.string().required(\"The Country is required\"),\r\n    }),\r\n    yup.object(),\r\n    yup.object({\r\n        nameOnCard: yup.string().required()\r\n    })\r\n\r\n];\r\n","import {\r\n    Box,\r\n    Button,\r\n    Paper,\r\n    Step,\r\n    StepLabel,\r\n    Stepper,\r\n    Typography,\r\n} from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { FieldValues, FormProvider, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport AddressForm from \"./AddressForm\";\r\nimport PaymentForm from \"./PaymentForm\";\r\nimport Review from \"./Review\";\r\nimport { validationSchema } from \"./checkoutValidation\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { clearBasket } from \"../basket/basketSlice\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { StripeElementType } from \"@stripe/stripe-js\";\r\nimport {\r\n    CardNumberElement,\r\n    useElements,\r\n    useStripe,\r\n} from \"@stripe/react-stripe-js\";\r\n\r\nconst steps = [\"Shipping address\", \"Review your order\", \"Payment details\"];\r\n\r\nexport default function CheckoutPage() {\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [orderNumber, setOrderNumber] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch = useAppDispatch();\r\n    const [cardState, setCardState] = useState<{\r\n        elementError: { [key in StripeElementType]?: string };\r\n    }>({ elementError: {} });\r\n    const [cardComplete, setCardComplete] = useState<any>({\r\n        cardNumber: false,\r\n        cardExpiry: false,\r\n        cardCvc: false,\r\n    });\r\n    const [paymentMessage, setPaymentMessage] = useState(\"\");\r\n    const [paymentSucceeded, setPaymentSucceeded] = useState(false);\r\n    const { basket } = useAppSelector((state) => state.basket);\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    function onCardInputChange(event: any) {\r\n        setCardState({\r\n            ...cardState,\r\n            elementError: {\r\n                ...cardState.elementError,\r\n                [event.elementType]: event.error?.message,\r\n            },\r\n        });\r\n        setCardComplete({\r\n            ...cardComplete,\r\n            [event.elementType]: event.complete,\r\n        });\r\n    }\r\n\r\n    function getStepContent(step: number) {\r\n        switch (step) {\r\n            case 0:\r\n                return <AddressForm />;\r\n            case 1:\r\n                return <Review />;\r\n            case 2:\r\n                return (\r\n                    <PaymentForm\r\n                        cardState={cardState}\r\n                        onCardInputChange={onCardInputChange}\r\n                    />\r\n                );\r\n            default:\r\n                throw new Error(\"Unknown step\");\r\n        }\r\n    }\r\n\r\n    const currentValidationSchema = validationSchema[activeStep];\r\n\r\n    const methods = useForm({\r\n        mode: \"all\",\r\n        resolver: yupResolver(currentValidationSchema),\r\n    });\r\n\r\n    useEffect(() => {\r\n        agent.Account.fetchAddress().then((response) => {\r\n            if (response) {\r\n                methods.reset({\r\n                    ...methods.getValues(),\r\n                    ...response,\r\n                    saveAddress: false,\r\n                });\r\n            }\r\n        });\r\n    }, [methods]);\r\n\r\n    async function submitOrder(data: FieldValues) {\r\n        setLoading(true);\r\n        const { nameOnCard, saveAddress, ...shippingAddress } = data;\r\n        if (!stripe || !elements) return; // stripe is not ready\r\n        try {\r\n            const cardElement = elements.getElement(CardNumberElement);\r\n            const paymentResult = await stripe.confirmCardPayment(\r\n                basket?.clientSecret!,\r\n                {\r\n                    payment_method: {\r\n                        card: cardElement!,\r\n                        billing_details: {\r\n                            name: nameOnCard,\r\n                        },\r\n                    },\r\n                }\r\n            );\r\n            console.log(paymentResult);\r\n            if (paymentResult.paymentIntent?.status === \"succeeded\") {\r\n                const orderNumber = await agent.Orders.create({\r\n                    saveAddress,\r\n                    shippingAddress,\r\n                });\r\n                setOrderNumber(orderNumber);\r\n                setPaymentSucceeded(true);\r\n                setPaymentMessage(\"Thank you - we have received your payment\");\r\n                setActiveStep(activeStep + 1);\r\n                dispatch(clearBasket());\r\n                setLoading(false);\r\n            } else {\r\n                setPaymentMessage(paymentResult.error?.message!);\r\n                setPaymentSucceeded(false);\r\n                setLoading(false);\r\n                setActiveStep(activeStep + 1);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const handleNext = async (data: FieldValues) => {\r\n        if (activeStep === steps.length - 1) {\r\n            await submitOrder(data);\r\n        } else {\r\n            setActiveStep(activeStep + 1);\r\n        }\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n    function submitDisabled(): boolean {\r\n        if (activeStep === steps.length - 1) {\r\n            return (\r\n                !cardComplete.cardCvc ||\r\n                !cardComplete.cardExpiry ||\r\n                !cardComplete.cardNumber ||\r\n                !methods.formState.isValid\r\n            );\r\n        } else {\r\n            return !methods.formState.isValid;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormProvider {...methods}>\r\n            <Paper\r\n                variant='outlined'\r\n                sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}\r\n            >\r\n                <Typography component='h1' variant='h4' align='center'>\r\n                    Checkout\r\n                </Typography>\r\n                <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\r\n                    {steps.map((label) => (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n                <>\r\n                    {activeStep === steps.length ? (\r\n                        <>\r\n                            <Typography variant='h5' gutterBottom>\r\n                                {paymentMessage}\r\n                            </Typography>\r\n                            {paymentSucceeded ? (\r\n                                <Typography variant='subtitle1'>\r\n                                    Your order number is #{orderNumber}. We have\r\n                                    not emailed your order confirmation, and\r\n                                    will not send you an update when your order\r\n                                    has shipped as this is a fake store!\r\n                                </Typography>\r\n                            ) : (\r\n                                <Button\r\n                                    variant='contained'\r\n                                    onClick={handleBack}\r\n                                >\r\n                                    Go back and try again\r\n                                </Button>\r\n                            )}\r\n                        </>\r\n                    ) : (\r\n                        <form onSubmit={methods.handleSubmit(handleNext)}>\r\n                            {getStepContent(activeStep)}\r\n                            <Box\r\n                                sx={{\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"flex-end\",\r\n                                }}\r\n                            >\r\n                                {activeStep !== 0 && (\r\n                                    <Button\r\n                                        onClick={handleBack}\r\n                                        sx={{ mt: 3, ml: 1 }}\r\n                                    >\r\n                                        Back\r\n                                    </Button>\r\n                                )}\r\n                                <LoadingButton\r\n                                    loading={loading}\r\n                                    disabled={submitDisabled()}\r\n                                    variant='contained'\r\n                                    type='submit'\r\n                                    sx={{ mt: 3, ml: 1 }}\r\n                                >\r\n                                    {activeStep === steps.length - 1\r\n                                        ? \"Place order\"\r\n                                        : \"Next\"}\r\n                                </LoadingButton>\r\n                            </Box>\r\n                        </form>\r\n                    )}\r\n                </>\r\n            </Paper>\r\n        </FormProvider>\r\n    );\r\n}\r\n","import { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { useEffect, useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { setBasket } from \"../basket/basketSlice\";\r\nimport CheckoutPage from \"./CheckoutPage\";\r\n\r\nconst stripePromise = loadStripe(\r\n    \"pk_test_51KEr7BIysTd1BE5eymLqbDwksD1C2hbd196cvhIPbrAY3CDgP8Yl9jcRz1sgOzWMyGV15CEc1Y5bXveJYStDTzFS00nTnEE28p\"\r\n);\r\n\r\nexport default function CheckoutWrapper() {\r\n    const dispatch = useAppDispatch();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        agent.Payments.createPaymentIntent()\r\n            .then((basket) => dispatch(setBasket(basket)))\r\n            .catch((error) => console.log(error))\r\n            .finally(() => setLoading(false));\r\n    }, [dispatch]);\r\n\r\n    if (loading) return <LoadingComponent message='Loading checkout...' />;\r\n\r\n    return (\r\n        <Elements stripe={stripePromise}>\r\n            <CheckoutPage />\r\n        </Elements>\r\n    );\r\n}\r\n","import { UploadFile } from \"@mui/icons-material\";\r\nimport { FormControl, FormHelperText, Typography } from \"@mui/material\";\r\nimport { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useController, UseControllerProps } from \"react-hook-form\";\r\n\r\ninterface Props extends UseControllerProps {}\r\n\r\nexport default function AppDropZone(props: Props) {\r\n    const { fieldState, field } = useController({\r\n        ...props,\r\n        defaultValue: null,\r\n    });\r\n\r\n    const dzStyles = {\r\n        display: \"flex\",\r\n        border: \"dashed 3px #eee\",\r\n        borderColor: \"#eee\",\r\n        borderRadius: \"5px\",\r\n        paddingTop: \"30px\",\r\n        alignItems: \"center\",\r\n        height: 200,\r\n        width: 500,\r\n    };\r\n\r\n    const dzActive = {\r\n        borderColor: \"green\",\r\n    };\r\n\r\n    const onDrop = useCallback(\r\n        (acceptedFiles) => {\r\n            acceptedFiles[0] = Object.assign(acceptedFiles[0], {\r\n                preview: URL.createObjectURL(acceptedFiles[0]),\r\n            });\r\n            field.onChange(acceptedFiles[0]);\r\n        },\r\n        [field]\r\n    );\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n        onDrop,\r\n    });\r\n\r\n    return (\r\n        <div {...getRootProps()}>\r\n            <FormControl\r\n                style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}\r\n                error={!!fieldState.error}\r\n            >\r\n                <input {...getInputProps()} />\r\n                <UploadFile sx={{ fontSize: \"100px\" }} />\r\n                <Typography variant='h4'>Drop image here</Typography>\r\n                <FormHelperText>{fieldState.error?.message}</FormHelperText>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n","import {\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    FormHelperText,\r\n} from \"@mui/material\";\r\nimport { useController, UseControllerProps } from \"react-hook-form\";\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string;\r\n    items: string[];\r\n}\r\n\r\nexport default function AppSelectList(props: Props) {\r\n    const { fieldState, field } = useController({ ...props, defaultValue: \"\" });\r\n    return (\r\n        <FormControl fullWidth error={!!fieldState.error}>\r\n            <InputLabel>{props.label}</InputLabel>\r\n            <Select\r\n                value={field.value}\r\n                label={props.label}\r\n                onChange={field.onChange}\r\n            >\r\n                {props.items.map((item, index) => (\r\n                    <MenuItem key={index} value={item}>\r\n                        {item}\r\n                    </MenuItem>\r\n                ))}\r\n            </Select>\r\n            <FormHelperText>{fieldState.error?.message}</FormHelperText>\r\n        </FormControl>\r\n    );\r\n}\r\n","import * as yup from \"yup\";\r\n\r\nexport const validationSchema = yup.object({\r\n    name: yup.string().required(),\r\n    brand: yup.string().required(),\r\n    type: yup.string().required(),\r\n    price: yup.number().required().moreThan(100),\r\n    quantityInStock: yup.number().required().min(0),\r\n    description: yup.string().required(),\r\n    file: yup.mixed().when(\"pictureUrl\", {\r\n        is: (value: string) => !value,\r\n        then: yup.mixed().required(\"Please provide an image\"),\r\n    }),\r\n});\r\n","import { Typography, Grid, Paper, Box, Button } from \"@mui/material\";\r\nimport { useEffect } from \"react\";\r\nimport { FieldValues, useForm } from \"react-hook-form\";\r\nimport AppDropZone from \"../../app/components/AppDropZone\";\r\nimport AppSelectList from \"../../app/components/AppSelectList\";\r\nimport AppTextInput from \"../../app/components/AppTextInput\";\r\nimport useProducts from \"../../app/hooks/useProducts\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { validationSchema } from \"./productValidation\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { setProduct } from \"../catalog/catalogSlice\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\n\r\ninterface Props {\r\n    product?: Product;\r\n    cancelEdit: () => void;\r\n}\r\n\r\nexport default function ProductForm({ product, cancelEdit }: Props) {\r\n    const {\r\n        control,\r\n        reset,\r\n        handleSubmit,\r\n        watch,\r\n        formState: { isDirty, isSubmitting },\r\n    } = useForm({\r\n        resolver: yupResolver<any>(validationSchema),\r\n    });\r\n    const { brands, types } = useProducts();\r\n    const watchFile = watch(\"file\", null);\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        if (product && !watchFile && !isDirty) reset(product);\r\n        return () => {\r\n            if (watchFile) URL.revokeObjectURL(watchFile.preview);\r\n        };\r\n    }, [product, reset, watchFile, isDirty]);\r\n\r\n    async function handleSubmitData(data: FieldValues) {\r\n        try {\r\n            let response: Product;\r\n            if (product) {\r\n                response = await agent.Admin.updateProduct(data);\r\n            } else {\r\n                response = await agent.Admin.createProduct(data);\r\n            }\r\n            dispatch(setProduct(response));\r\n            cancelEdit();\r\n        } catch (error: any) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box component={Paper} sx={{ p: 4 }}>\r\n            <Typography variant='h4' gutterBottom sx={{ mb: 4 }}>\r\n                Product Details\r\n            </Typography>\r\n            <form onSubmit={handleSubmit(handleSubmitData)}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={12}>\r\n                        <AppTextInput\r\n                            control={control}\r\n                            name='name'\r\n                            label='Product name'\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <AppSelectList\r\n                            control={control}\r\n                            items={brands}\r\n                            name='brand'\r\n                            label='Brand'\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <AppSelectList\r\n                            control={control}\r\n                            items={types}\r\n                            name='type'\r\n                            label='Type'\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <AppTextInput\r\n                            control={control}\r\n                            type='number'\r\n                            name='price'\r\n                            label='Price'\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <AppTextInput\r\n                            control={control}\r\n                            type='number'\r\n                            name='quantityInStock'\r\n                            label='Quantity in Stock'\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <AppTextInput\r\n                            multiline={true}\r\n                            rows={4}\r\n                            control={control}\r\n                            name='description'\r\n                            label='Description'\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Box\r\n                            display='flex'\r\n                            justifyContent='space-between'\r\n                            alignItems='center'\r\n                        >\r\n                            <AppDropZone control={control} name='file' />\r\n                            {watchFile ? (\r\n                                <img\r\n                                    src={watchFile.preview}\r\n                                    alt='preview'\r\n                                    style={{ maxHeight: 200 }}\r\n                                />\r\n                            ) : (\r\n                                <img\r\n                                    src={product?.pictureUrl}\r\n                                    alt={product?.name}\r\n                                    style={{ maxHeight: 200 }}\r\n                                />\r\n                            )}\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n                <Box\r\n                    display='flex'\r\n                    justifyContent='space-between'\r\n                    sx={{ mt: 3 }}\r\n                >\r\n                    <Button\r\n                        onClick={cancelEdit}\r\n                        variant='contained'\r\n                        color='inherit'\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                    <LoadingButton\r\n                        loading={isSubmitting}\r\n                        type='submit'\r\n                        variant='contained'\r\n                        color='success'\r\n                    >\r\n                        Submit\r\n                    </LoadingButton>\r\n                </Box>\r\n            </form>\r\n        </Box>\r\n    );\r\n}\r\n","import {\r\n    Typography,\r\n    Button,\r\n    TableContainer,\r\n    Paper,\r\n    Table,\r\n    TableHead,\r\n    TableRow,\r\n    TableCell,\r\n    TableBody,\r\n    Box,\r\n} from \"@mui/material\";\r\nimport { Edit, Delete } from \"@mui/icons-material\";\r\nimport { currencyFormat } from \"../../app/util/util\";\r\nimport useProducts from \"../../app/hooks/useProducts\";\r\nimport AppPagination from \"../../app/components/AppPagination\";\r\nimport { useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { removeProduct, setPageNumber } from \"../catalog/catalogSlice\";\r\nimport { useState } from \"react\";\r\nimport ProductForm from \"./ProductForm\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\n\r\nexport default function Inventory() {\r\n    const { products, metaData } = useProducts();\r\n    const dispatch = useAppDispatch();\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [selectedProduct, setSelectedProduct] = useState<Product | undefined>(\r\n        undefined\r\n    );\r\n    const [loading, setLoading] = useState(false);\r\n    const [target, setTarget] = useState(0);\r\n\r\n    function handleSelectProduct(product: Product) {\r\n        setSelectedProduct(product);\r\n        setEditMode(true);\r\n    }\r\n\r\n    function handleDeleteProduct(id: number) {\r\n        setLoading(true);\r\n        setTarget(id);\r\n        agent.Admin.deleteProduct(id)\r\n            .then(() => dispatch(removeProduct(id)))\r\n            .catch((error) => console.log(error))\r\n            .finally(() => setLoading(false));\r\n    }\r\n\r\n    function cancelEdit() {\r\n        if (selectedProduct) setSelectedProduct(undefined);\r\n        setEditMode(false);\r\n    }\r\n\r\n    if (editMode)\r\n        return (\r\n            <ProductForm product={selectedProduct} cancelEdit={cancelEdit} />\r\n        );\r\n    return (\r\n        <>\r\n            <Box display='flex' justifyContent='space-between'>\r\n                <Typography sx={{ p: 2 }} variant='h4'>\r\n                    Inventory\r\n                </Typography>\r\n                <Button\r\n                    onClick={() => setEditMode(true)}\r\n                    sx={{ m: 2 }}\r\n                    size='large'\r\n                    variant='contained'\r\n                >\r\n                    Create\r\n                </Button>\r\n            </Box>\r\n            <TableContainer component={Paper}>\r\n                <Table sx={{ minWidth: 650 }} aria-label='simple table'>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>#</TableCell>\r\n                            <TableCell align='left'>Product</TableCell>\r\n                            <TableCell align='right'>Price</TableCell>\r\n                            <TableCell align='center'>Type</TableCell>\r\n                            <TableCell align='center'>Brand</TableCell>\r\n                            <TableCell align='center'>Quantity</TableCell>\r\n                            <TableCell align='right'></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {products.map((product) => (\r\n                            <TableRow\r\n                                key={product.id}\r\n                                sx={{\r\n                                    \"&:last-child td, &:last-child th\": {\r\n                                        border: 0,\r\n                                    },\r\n                                }}\r\n                            >\r\n                                <TableCell component='th' scope='row'>\r\n                                    {product.id}\r\n                                </TableCell>\r\n                                <TableCell align='left'>\r\n                                    <Box display='flex' alignItems='center'>\r\n                                        <img\r\n                                            src={product.pictureUrl}\r\n                                            alt={product.name}\r\n                                            style={{\r\n                                                height: 50,\r\n                                                marginRight: 20,\r\n                                            }}\r\n                                        />\r\n                                        <span>{product.name}</span>\r\n                                    </Box>\r\n                                </TableCell>\r\n                                <TableCell align='right'>\r\n                                    {currencyFormat(product.price)}\r\n                                </TableCell>\r\n                                <TableCell align='center'>\r\n                                    {product.type}\r\n                                </TableCell>\r\n                                <TableCell align='center'>\r\n                                    {product.brand}\r\n                                </TableCell>\r\n                                <TableCell align='center'>\r\n                                    {product.quantityInStock}\r\n                                </TableCell>\r\n                                <TableCell align='right'>\r\n                                    <Button\r\n                                        onClick={() =>\r\n                                            handleSelectProduct(product)\r\n                                        }\r\n                                        startIcon={<Edit />}\r\n                                    />\r\n                                    <LoadingButton\r\n                                        loading={\r\n                                            loading && target === product.id\r\n                                        }\r\n                                        startIcon={<Delete />}\r\n                                        color='error'\r\n                                        onClick={() =>\r\n                                            handleDeleteProduct(product.id)\r\n                                        }\r\n                                    />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            {metaData && (\r\n                <Box sx={{ pt: 2 }}>\r\n                    <AppPagination\r\n                        metaData={metaData}\r\n                        onPageChange={(page: number) =>\r\n                            dispatch(setPageNumber({ pageNumber: page }))\r\n                        }\r\n                    />\r\n                </Box>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","import Header from \"./Header\";\nimport HomePage from \"../../features/home/HomePage\";\nimport {\n    Container,\n    createTheme,\n    CssBaseline,\n    ThemeProvider,\n} from \"@mui/material\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport Catalog from \"../../features/catalog/Catalog\";\nimport ProductDetails from \"../../features/catalog/ProductDetails\";\nimport AboutPage from \"../../features/about/AboutPage\";\nimport ContactPage from \"../../features/contact/ContactPage\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport ServerError from \"../errors/ServerError\";\nimport BasketPage from \"../../features/basket/BasketPage\";\nimport NotFound from \"../errors/NotFound\";\nimport Login from \"../../features/account/Login\";\nimport Register from \"../../features/account/Register\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport { useAppDispatch } from \"../store/configureStore\";\nimport { fetchBasketAsync } from \"../../features/basket/basketSlice\";\nimport { fetchCurrentUser } from \"../../features/account/accountSlice\";\nimport Orders from \"../../features/orders/Orders\";\nimport CheckoutWrapper from \"../../features/checkout/CheckoutWrapper\";\nimport Inventory from \"../../features/admin/Inventory\";\n\nfunction App() {\n    const dispatch = useAppDispatch();\n    const [loading, setLoading] = useState(true);\n\n    const initApp = useCallback(async () => {\n        try {\n            await dispatch(fetchCurrentUser());\n            await dispatch(fetchBasketAsync());\n        } catch (error: any) {\n            console.log(error);\n        }\n    }, [dispatch]);\n\n    useEffect(() => {\n        initApp().then(() => setLoading(false));\n    }, [initApp]);\n\n    const [darkMode, setDarkMode] = useState(false);\n    const paletteType = darkMode ? \"dark\" : \"light\";\n    const theme = createTheme({\n        palette: {\n            mode: paletteType,\n            background: {\n                default: paletteType === \"light\" ? \"#eaeaea\" : \"#121212\",\n            },\n        },\n    });\n\n    function handleThemeChange() {\n        setDarkMode(!darkMode);\n    }\n\n    if (loading) return <LoadingComponent message='Initialising app...' />;\n\n    return (\n        <ThemeProvider theme={theme}>\n            <ToastContainer position='bottom-right' hideProgressBar />\n            <CssBaseline />\n            <Header darkMode={darkMode} handleThemeChange={handleThemeChange} />\n            <Route exact path='/' component={HomePage} />\n            <Route\n                path={\"/(.+)\"}\n                render={() => (\n                    <Container sx={{ mt: 4 }}>\n                        <Switch>\n                            <Route exact path='/catalog' component={Catalog} />\n                            <Route\n                                path='/catalog/:id'\n                                component={ProductDetails}\n                            />\n                            <Route path='/about' component={AboutPage} />\n                            <Route path='/contact' component={ContactPage} />\n                            <Route\n                                path='/server-error'\n                                component={ServerError}\n                            />\n                            <Route path='/basket' component={BasketPage} />\n                            <PrivateRoute\n                                path='/checkout'\n                                component={CheckoutWrapper}\n                            />\n                            <PrivateRoute path='/orders' component={Orders} />\n                            <PrivateRoute\n                                roles={[\"Admin\"]}\n                                path='/inventory'\n                                component={Inventory}\n                            />\n                            <Route path='/login' component={Login} />\n                            <Route path='/register' component={Register} />\n                            <Route component={NotFound} />\n                        </Switch>\n                    </Container>\n                )}\n            />\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./app/layout/styles.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./app/store/configureStore\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router history={history}>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}