{"version":3,"sources":["features/contact/counterSlice.ts","app/models/pagination.ts","app/api/agent.ts","app/util/util.ts","features/basket/basketSlice.ts","features/catalog/catalogSlice.ts","features/account/accountSlice.ts","app/store/configureStore.ts","app/layout/SignedInMenu.tsx","app/layout/Header.tsx","features/home/HomePage.tsx","app/layout/PrivateRoute.tsx","features/catalog/ProductCard.tsx","features/catalog/ProductCardSkeleton.tsx","features/catalog/ProductList.tsx","features/catalog/ProductSearch.tsx","app/layout/LoadingComponent.tsx","app/components/RadioButtonGroup.tsx","app/components/CheckboxButtons.tsx","app/components/AppPagination.tsx","features/catalog/Catalog.tsx","app/errors/NotFound.tsx","features/catalog/ProductDetails.tsx","features/about/AboutPage.tsx","features/contact/ContactPage.tsx","app/errors/ServerError.tsx","features/basket/BasketSummary.tsx","features/basket/BasketTable.tsx","features/basket/BasketPage.tsx","features/account/Login.tsx","features/account/Register.tsx","features/orders/OrderDetailed.tsx","features/orders/Orders.tsx","app/components/AppCheckbox.tsx","app/components/AppTextInput.tsx","features/checkout/AddressForm.tsx","features/checkout/StripeInput.tsx","features/checkout/PaymentForm.tsx","features/checkout/Review.tsx","features/checkout/checkoutValidation.ts","features/checkout/CheckoutPage.tsx","features/checkout/CheckoutWrapper.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["counterSlice","createSlice","name","initialState","data","title","reducers","increment","state","action","payload","decrement","actions","PaginatedResponse","items","metaData","this","axios","defaults","baseURL","process","withCredentials","responseBody","response","interceptors","request","use","config","token","store","getState","account","user","headers","Authorization","a","pagination","JSON","parse","error","status","errors","modelStateErrors","key","push","flat","toast","history","pathname","Promise","reject","requests","url","params","get","then","body","post","delete","Basket","addItem","productId","quantity","removeItem","agent","Catalog","list","details","id","fetchFilters","TestErrors","get400Error","get401Error","get404Error","get500Error","getValidationError","Account","login","values","register","currentUser","fetchAddress","Orders","fetch","create","Payments","createPaymentIntent","currencyFormat","amount","toFixed","fetchBasketAsync","createAsyncThunk","_","thunkAPI","rejectWithValue","condition","b","document","cookie","match","pop","getCookie","addBasketItemAsync","removeBasketItemAsync","basketSlice","basket","setBasket","clearBasket","extraReducers","builder","addCase","pending","meta","arg","fulfilled","itemIndex","findIndex","i","undefined","splice","rejected","console","log","addMatcher","isAnyOf","productsAdapter","createEntityAdapter","getAxiosParams","productParams","URLSearchParams","append","pageNumber","toString","pageSize","orderBy","searchTerm","brands","length","types","fetchProductsAsync","catalog","dispatch","setMetaData","fetchProductAsync","catalogSlice","getInitialState","productsLoaded","filtersLoaded","setProductParams","setPageNumber","resetProductParams","setAll","upsertOne","productSelectors","getSelectors","signInUser","thunkApi","userDto","localStorage","setItem","stringify","fetchCurrentUser","setUser","getItem","accountSlice","signOut","configureStore","reducer","counter","useAppDispatch","useDispatch","useAppSelector","useSelector","SignedInMenu","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","Button","color","onClick","event","currentTarget","sx","typography","email","Menu","onClose","TransitionComponent","Fade","MenuItem","component","Link","to","midLinks","path","rightLinks","navStyles","textDecoration","Header","darkMode","handleThemeChange","itemCount","reduce","sum","item","AppBar","position","Toolbar","display","justifyContent","alignItems","Box","Typography","variant","NavLink","exact","IconButton","ml","List","map","ListItem","toUpperCase","size","Badge","badgeContent","ShoppingCart","HomePage","dots","infinite","speed","slidesToShow","slidesToScroll","src","alt","style","width","maxHeight","p","PrivateRoute","Component","rest","render","props","from","location","ProductCard","product","Card","CardHeader","avatar","Avatar","bgcolor","charAt","titleTypographyProps","fontWeight","CardMedia","height","backgroundSize","image","pictureUrl","CardContent","gutterBottom","price","brand","CardActions","LoadingButton","loading","includes","ProductCardSkeleton","Grid","xs","Skeleton","animation","marginBottom","ProductList","products","container","spacing","ProductSearch","setSearchTerm","debouncedSearch","debounce","target","value","TextField","label","fullWidth","onChange","LoadingComponent","message","Backdrop","invisible","CircularProgress","top","RadioButtonGroup","options","selectedValue","FormControl","RadioGroup","FormControlLabel","control","Radio","CheckboxButtons","checked","checkedItems","setCheckedItems","FormGroup","Checkbox","indexOf","newChecked","filter","handleChecked","AppPagination","onPageChange","currentPage","totalCount","totalPages","Pagination","count","page","e","sortOptions","selectAll","useEffect","columnSpacing","Paper","mb","NotFound","Container","Divider","ProductDetails","useParams","selectById","productStatus","setQuantity","find","parseInt","TableContainer","Table","TableBody","TableRow","TableCell","description","type","quantityInStock","disabled","updatedQuantity","AboutPage","validationErrors","setValidationErrors","ButtonGroup","catch","Alert","severity","AlertTitle","ListItemText","ContactPage","ServerError","useHistory","useLocation","detail","BasketSummary","subtotal","deliveryFee","colSpan","align","fontStyle","BasketTable","isBasket","minWidth","TableHead","border","scope","marginRight","Remove","Add","Delete","BasketPage","Login","useForm","mode","handleSubmit","formState","isSubmitting","isValid","maxWidth","flexDirection","m","onSubmit","noValidate","mt","margin","autoComplete","autoFocus","required","username","helperText","password","Register","setError","success","forEach","handleApiErrors","pattern","OrderDetailed","order","setSelectedOrder","orderItems","orderStatus","orders","setOrders","setLoading","selectedOrderNumber","setSelectedOrderNumber","finally","o","total","orderDate","split","AppCheckbox","field","useController","defaultValue","AppTextInput","fieldState","AddressForm","useFormContext","sm","isDirty","StripeInput","forwardRef","ref","elementRef","useRef","useImperativeHandle","focus","current","onReady","element","PaymentForm","cardState","onCardInputChange","md","elementError","cardNumber","InputLabelProps","shrink","InputProps","inputComponent","inputProps","CardNumberElement","cardExpiry","CardExpiryElement","cardCvc","CardCvcElement","Review","validationSchema","yup","fullName","address1","address2","city","zip","country","nameOnCard","steps","CheckoutPage","activeStep","setActiveStep","orderNumber","setOrderNumber","setCardState","cardComplete","setCardComplete","paymentMessage","setPaymentMessage","paymentSucceeded","setPaymentSucceeded","stripe","useStripe","elements","useElements","elementType","complete","currentValidationSchema","methods","resolver","yupResolver","submitOrder","saveAddress","shippingAddress","cardElement","getElement","confirmCardPayment","clientSecret","payment_method","card","billing_details","paymentResult","paymentIntent","reset","getValues","handleNext","handleBack","my","Stepper","pt","pb","Step","StepLabel","step","Error","getStepContent","stripePromise","loadStripe","CheckoutWrapper","App","initApp","useCallback","setDarkMode","paletteType","theme","createTheme","palette","background","default","ThemeProvider","hideProgressBar","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d8661601.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport interface CounterState {\r\n    data: number;\r\n    title: string;\r\n}\r\n\r\nconst initialState: CounterState = {\r\n    data: 42,\r\n    title: \"YARC (yet another redux counter with redux toolkit)\",\r\n};\r\n\r\nexport const counterSlice = createSlice({\r\n    name: \"counter\",\r\n    initialState,\r\n    reducers: {\r\n        increment: (state, action) => {\r\n            state.data += action.payload;\r\n        },\r\n        decrement: (state, action) => {\r\n            state.data -= action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { increment, decrement } = counterSlice.actions;\r\n","export interface MetaData {\r\n    currentPage: number;\r\n    totalPages: number;\r\n    pageSize: number;\r\n    totalCount: number;\r\n}\r\n\r\nexport class PaginatedResponse<T> {\r\n    items: T;\r\n    metaData: MetaData;\r\n\r\n    constructor(items: T, metaData: MetaData) {\r\n        this.items = items;\r\n        this.metaData = metaData;\r\n    }\r\n}\r\n","import { PaginatedResponse } from \"../models/pagination\";\r\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { store } from \"../store/configureStore\";\r\n\r\nconst sleep = () => new Promise((resolve) => setTimeout(resolve, 500));\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\naxios.defaults.withCredentials = true;\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\naxios.interceptors.request.use((config) => {\r\n    const token = store.getState().account.user?.token;\r\n    if (token) config.headers!.Authorization = `Bearer ${token}`;\r\n    return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n    async (response) => {\r\n        if (process.env.NODE_ENV === \"development\") await sleep();\r\n        const pagination = response.headers[\"pagination\"];\r\n        if (pagination) {\r\n            response.data = new PaginatedResponse(\r\n                response.data,\r\n                JSON.parse(pagination)\r\n            );\r\n            return response;\r\n        }\r\n        return response;\r\n    },\r\n    (error: AxiosError) => {\r\n        const { data, status } = error.response!;\r\n        switch (status) {\r\n            case 400:\r\n                if (data.errors) {\r\n                    const modelStateErrors: string[] = [];\r\n                    for (const key in data.errors) {\r\n                        if (data.errors[key]) {\r\n                            modelStateErrors.push(data.errors[key]);\r\n                        }\r\n                    }\r\n                    throw modelStateErrors.flat();\r\n                }\r\n                toast.error(data.title);\r\n                break;\r\n            case 401:\r\n                toast.error(data.title);\r\n                break;\r\n            case 500:\r\n                history.push({\r\n                    pathname: \"/server-error\",\r\n                    state: { error: data },\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return Promise.reject(error.response);\r\n    }\r\n);\r\n\r\nconst requests = {\r\n    get: (url: string, params?: URLSearchParams) =>\r\n        axios.get(url, { params: params }).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n    delete: (url: string) => axios.delete(url).then(responseBody),\r\n};\r\n\r\nconst Catalog = {\r\n    list: (params: URLSearchParams) => requests.get(\"products\", params),\r\n    details: (id: number) => requests.get(`products/${id}`),\r\n    fetchFilters: () => requests.get(\"products/filters\"),\r\n};\r\n\r\nconst TestErrors = {\r\n    get400Error: () => requests.get(\"buggy/bad-request\"),\r\n    get401Error: () => requests.get(\"buggy/unauthorized\"),\r\n    get404Error: () => requests.get(\"buggy/not-found\"),\r\n    get500Error: () => requests.get(\"buggy/server-error\"),\r\n    getValidationError: () => requests.get(\"buggy/validation-error\"),\r\n};\r\n\r\nconst Basket = {\r\n    get: () => requests.get(\"basket\"),\r\n    addItem: (productId: number, quantity = 1) =>\r\n        requests.post(`basket?productId=${productId}&quantity=${quantity}`, {}),\r\n    removeItem: (productId: number, quantity = 1) =>\r\n        requests.delete(`basket?productId=${productId}&quantity=${quantity}`),\r\n};\r\n\r\nconst Account = {\r\n    login: (values: any) => requests.post(\"account/login\", values),\r\n    register: (values: any) => requests.post(\"account/register\", values),\r\n    currentUser: () => requests.get(\"account/currentUser\"),\r\n    fetchAddress: () => requests.get(\"account/savedAddress\"),\r\n};\r\n\r\nconst Orders = {\r\n    list: () => requests.get(\"orders\"),\r\n    fetch: (id: number) => requests.get(`orders${id}`),\r\n    create: (values: any) => requests.post(\"orders\", values),\r\n};\r\n\r\nconst Payments = {\r\n    createPaymentIntent: () => requests.post(\"payments\", {}),\r\n};\r\n\r\nconst agent = {\r\n    Catalog,\r\n    TestErrors,\r\n    Basket,\r\n    Account,\r\n    Orders,\r\n    Payments,\r\n};\r\n\r\nexport default agent;\r\n","export function getCookie(key: string) {\r\n    const b = document.cookie.match(\"(^|;)\\\\s*\" + key + \"\\\\s*=\\\\s*([^;]+)\");\r\n    return b ? b.pop() : \"\";\r\n}\r\n\r\nexport function currencyFormat(amount: number) {\r\n    return \"$\" + (amount / 100).toFixed(2);\r\n}\r\n","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { Basket } from \"../../app/models/basket\";\r\nimport { getCookie } from \"../../app/util/util\";\r\n\r\ninterface BasketState {\r\n    basket: Basket | null;\r\n    status: string;\r\n}\r\n\r\nconst initialState: BasketState = {\r\n    basket: null,\r\n    status: \"idle\",\r\n};\r\n\r\nexport const fetchBasketAsync = createAsyncThunk<Basket>(\r\n    \"basket/fetchBasketAsync\",\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            return await agent.Basket.get();\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n        }\r\n    },\r\n    {\r\n        condition: () => {\r\n            if (!getCookie(\"buyerId\")) return false;\r\n        },\r\n    }\r\n);\r\n\r\nexport const addBasketItemAsync = createAsyncThunk<\r\n    Basket,\r\n    { productId: number; quantity?: number }\r\n>(\r\n    \"basket/addBasketItemAsync\",\r\n    async ({ productId, quantity = 1 }, thunkAPI) => {\r\n        try {\r\n            return await agent.Basket.addItem(productId, quantity);\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n        }\r\n    }\r\n);\r\n\r\nexport const removeBasketItemAsync = createAsyncThunk<\r\n    void,\r\n    { productId: number; quantity: number; name?: string }\r\n>(\"basket/removeBasketItemAsync\", async ({ productId, quantity }, thunkAPI) => {\r\n    try {\r\n        await agent.Basket.removeItem(productId, quantity);\r\n    } catch (error: any) {\r\n        return thunkAPI.rejectWithValue({ error: error.data });\r\n    }\r\n});\r\n\r\nexport const basketSlice = createSlice({\r\n    name: \"basket\",\r\n    initialState,\r\n    reducers: {\r\n        setBasket: (state, action) => {\r\n            state.basket = action.payload;\r\n        },\r\n        clearBasket: (state) => {\r\n            state.basket = null;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(addBasketItemAsync.pending, (state, action) => {\r\n            state.status = \"pendingAddItem\" + action.meta.arg.productId;\r\n        });\r\n        builder.addCase(removeBasketItemAsync.pending, (state, action) => {\r\n            state.status =\r\n                \"pendingRemoveItem\" +\r\n                action.meta.arg.productId +\r\n                action.meta.arg.name;\r\n        });\r\n        builder.addCase(removeBasketItemAsync.fulfilled, (state, action) => {\r\n            const { productId, quantity } = action.meta.arg;\r\n            const itemIndex = state.basket?.items.findIndex(\r\n                (i) => i.productId === productId\r\n            );\r\n            if (itemIndex === -1 || itemIndex === undefined) return;\r\n            state.basket!.items[itemIndex].quantity -= quantity;\r\n            if (state.basket?.items[itemIndex].quantity === 0)\r\n                state.basket.items.splice(itemIndex, 1);\r\n            state.status = \"idle\";\r\n        });\r\n        builder.addCase(removeBasketItemAsync.rejected, (state, action) => {\r\n            state.status = \"idle\";\r\n            console.log(action.payload);\r\n        });\r\n        builder.addMatcher(\r\n            isAnyOf(addBasketItemAsync.fulfilled, fetchBasketAsync.fulfilled),\r\n            (state, action) => {\r\n                state.basket = action.payload;\r\n                state.status = \"idle\";\r\n            }\r\n        );\r\n        builder.addMatcher(\r\n            isAnyOf(addBasketItemAsync.rejected, fetchBasketAsync.rejected),\r\n            (state, action) => {\r\n                state.status = \"idle\";\r\n                console.log(action.payload);\r\n            }\r\n        );\r\n    },\r\n});\r\n\r\nexport const { setBasket, clearBasket } = basketSlice.actions;\r\n","import {\r\n    createAsyncThunk,\r\n    createEntityAdapter,\r\n    createSlice,\r\n} from \"@reduxjs/toolkit\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { MetaData } from \"../../app/models/pagination\";\r\nimport { Product, ProductParams } from \"../../app/models/product\";\r\nimport { RootState } from \"../../app/store/configureStore\";\r\n\r\ninterface CatalogState {\r\n    productsLoaded: boolean;\r\n    filtersLoaded: boolean;\r\n    status: string;\r\n    brands: string[];\r\n    types: string[];\r\n    productParams: ProductParams;\r\n    metaData: MetaData | null;\r\n}\r\n\r\nconst productsAdapter = createEntityAdapter<Product>();\r\n\r\nfunction getAxiosParams(productParams: ProductParams) {\r\n    const params = new URLSearchParams();\r\n    params.append(\"pageNumber\", productParams.pageNumber.toString());\r\n    params.append(\"pageSize\", productParams.pageSize.toString());\r\n    params.append(\"orderBy\", productParams.orderBy);\r\n    if (productParams.searchTerm)\r\n        params.append(\"searchTerm\", productParams.searchTerm);\r\n    if (productParams.brands.length > 0)\r\n        params.append(\"brands\", productParams.brands.toString());\r\n    if (productParams.types.length > 0)\r\n        params.append(\"types\", productParams.types.toString());\r\n    return params;\r\n}\r\n\r\nexport const fetchProductsAsync = createAsyncThunk<\r\n    Product[],\r\n    void,\r\n    { state: RootState }\r\n>(\"catalog/fetchProductsAsync\", async (_, thunkAPI) => {\r\n    const params = getAxiosParams(thunkAPI.getState().catalog.productParams);\r\n    try {\r\n        const response = await agent.Catalog.list(params);\r\n        thunkAPI.dispatch(setMetaData(response.metaData));\r\n        return response.items;\r\n    } catch (error: any) {\r\n        return thunkAPI.rejectWithValue({ error: error.data });\r\n    }\r\n});\r\n\r\nexport const fetchProductAsync = createAsyncThunk<Product, number>(\r\n    \"catalog/fetchProductAsync\",\r\n    async (productId, thunkAPI) => {\r\n        try {\r\n            return await agent.Catalog.details(productId);\r\n        } catch (error: any) {\r\n            thunkAPI.rejectWithValue({ error: error.data });\r\n        }\r\n    }\r\n);\r\n\r\nexport const fetchFilters = createAsyncThunk(\r\n    \"catalog/fetchFilters\",\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            return agent.Catalog.fetchFilters();\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n        }\r\n    }\r\n);\r\n\r\nfunction initParams() {\r\n    return {\r\n        pageNumber: 1,\r\n        pageSize: 6,\r\n        orderBy: \"name\",\r\n        brands: [],\r\n        types: [],\r\n    };\r\n}\r\n\r\nexport const catalogSlice = createSlice({\r\n    name: \"catalog\",\r\n    initialState: productsAdapter.getInitialState<CatalogState>({\r\n        productsLoaded: false,\r\n        filtersLoaded: false,\r\n        status: \"idle\",\r\n        brands: [],\r\n        types: [],\r\n        productParams: initParams(),\r\n        metaData: null,\r\n    }),\r\n    reducers: {\r\n        setProductParams: (state, action) => {\r\n            state.productsLoaded = false;\r\n            state.productParams = {\r\n                ...state.productParams,\r\n                ...action.payload,\r\n                pageNumber: 1,\r\n            };\r\n        },\r\n        setPageNumber: (state, action) => {\r\n            state.productsLoaded = false;\r\n            state.productParams = {\r\n                ...state.productParams,\r\n                ...action.payload,\r\n            };\r\n        },\r\n        setMetaData: (state, action) => {\r\n            state.metaData = action.payload;\r\n        },\r\n        resetProductParams: (state) => {\r\n            state.productParams = initParams();\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchProductsAsync.pending, (state) => {\r\n            state.status = \"pendingFetchProducts\";\r\n        });\r\n        builder.addCase(fetchProductsAsync.fulfilled, (state, action) => {\r\n            productsAdapter.setAll(state, action.payload);\r\n            state.status = \"idle\";\r\n            state.productsLoaded = true;\r\n        });\r\n        builder.addCase(fetchProductsAsync.rejected, (state, action) => {\r\n            console.log(action.payload);\r\n            state.status = \"idle\";\r\n        });\r\n        builder.addCase(fetchProductAsync.pending, (state) => {\r\n            state.status = \"pendingFetchProduct\";\r\n        });\r\n        builder.addCase(fetchProductAsync.fulfilled, (state, action) => {\r\n            productsAdapter.upsertOne(state, action.payload);\r\n            state.status = \"idle\";\r\n        });\r\n        builder.addCase(fetchProductAsync.rejected, (state, action) => {\r\n            console.log(action);\r\n            state.status = \"idle\";\r\n        });\r\n        builder.addCase(fetchFilters.pending, (state) => {\r\n            state.status = \"pendingFetchFilters\";\r\n        });\r\n        builder.addCase(fetchFilters.fulfilled, (state, action) => {\r\n            state.brands = action.payload.brands;\r\n            state.types = action.payload.types;\r\n            state.filtersLoaded = true;\r\n        });\r\n        builder.addCase(fetchFilters.rejected, (state, action) => {\r\n            state.status = \"idle\";\r\n            console.log(action.payload);\r\n        });\r\n    },\r\n});\r\n\r\nexport const productSelectors = productsAdapter.getSelectors(\r\n    (state: RootState) => state.catalog\r\n);\r\n\r\nexport const {\r\n    setProductParams,\r\n    resetProductParams,\r\n    setMetaData,\r\n    setPageNumber,\r\n} = catalogSlice.actions;\r\n","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\r\nimport { FieldValues } from \"react-hook-form\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { User } from \"../../app/models/user\";\r\nimport { setBasket } from \"../basket/basketSlice\";\r\n\r\ninterface AccountState {\r\n    user: User | null;\r\n}\r\n\r\nconst initialState: AccountState = {\r\n    user: null,\r\n};\r\n\r\nexport const signInUser = createAsyncThunk<User, FieldValues>(\r\n    \"account/signInUser\",\r\n    async (data, thunkApi) => {\r\n        try {\r\n            const userDto = await agent.Account.login(data);\r\n            const { basket, ...user } = userDto;\r\n            if (basket) thunkApi.dispatch(setBasket(basket));\r\n            localStorage.setItem(\"user\", JSON.stringify(user));\r\n            return user;\r\n        } catch (error: any) {\r\n            return thunkApi.rejectWithValue({ error: error.data });\r\n        }\r\n    }\r\n);\r\n\r\nexport const fetchCurrentUser = createAsyncThunk<User>(\r\n    \"account/fetchCurrentUser\",\r\n    async (_, thunkApi) => {\r\n        thunkApi.dispatch(setUser(JSON.parse(localStorage.getItem(\"user\")!)));\r\n        try {\r\n            const userDto = await agent.Account.currentUser();\r\n            const { basket, ...user } = userDto;\r\n            if (basket) thunkApi.dispatch(setBasket(basket));\r\n            localStorage.setItem(\"user\", JSON.stringify(user));\r\n            return user;\r\n        } catch (error: any) {\r\n            return thunkApi.rejectWithValue({ error: error.data });\r\n        }\r\n    },\r\n    {\r\n        condition: () => {\r\n            if (!localStorage.getItem(\"user\")) return false;\r\n        },\r\n    }\r\n);\r\n\r\nexport const accountSlice = createSlice({\r\n    name: \"account\",\r\n    initialState,\r\n    reducers: {\r\n        signOut: (state) => {\r\n            state.user = null;\r\n            localStorage.removeItem(\"user\");\r\n            history.push(\"/\");\r\n        },\r\n        setUser: (state, action) => {\r\n            state.user = action.payload;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchCurrentUser.rejected, (state) => {\r\n            state.user = null;\r\n            localStorage.removeItem(\"user\");\r\n            toast.error(\"Session expired - please login again\");\r\n            history.push(\"/\");\r\n        });\r\n        builder.addMatcher(\r\n            isAnyOf(signInUser.fulfilled, fetchCurrentUser.fulfilled),\r\n            (state, action) => {\r\n                state.user = action.payload;\r\n            }\r\n        );\r\n        builder.addMatcher(isAnyOf(signInUser.rejected), (state, action) => {\r\n            throw action.payload;\r\n        });\r\n    },\r\n});\r\n\r\nexport const { signOut, setUser } = accountSlice.actions;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport { counterSlice } from \"../../features/contact/counterSlice\";\r\nimport { basketSlice } from \"../../features/basket/basketSlice\";\r\nimport { catalogSlice } from \"../../features/catalog/catalogSlice\";\r\nimport { accountSlice } from \"../../features/account/accountSlice\";\r\n\r\n// export function configureStore() {\r\n//     return createStore(counterReducer);\r\n// }\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        counter: counterSlice.reducer,\r\n        basket: basketSlice.reducer,\r\n        catalog: catalogSlice.reducer,\r\n        account: accountSlice.reducer,\r\n    },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import React from \"react\";\r\nimport { Button, Fade, Menu, MenuItem } from \"@mui/material\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/configureStore\";\r\nimport { signOut } from \"../../features/account/accountSlice\";\r\nimport { clearBasket } from \"../../features/basket/basketSlice\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function SignedInMenu() {\r\n    const dispatch = useAppDispatch();\r\n    const { user } = useAppSelector((state) => state.account);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event: any) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                color='inherit'\r\n                onClick={handleClick}\r\n                sx={{ typography: \"h6\" }}\r\n            >\r\n                {user?.email}\r\n            </Button>\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                TransitionComponent={Fade}\r\n            >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem component={Link} to='/orders'>\r\n                    My orders\r\n                </MenuItem>\r\n                <MenuItem\r\n                    onClick={() => {\r\n                        dispatch(signOut());\r\n                        dispatch(clearBasket());\r\n                    }}\r\n                >\r\n                    Logout\r\n                </MenuItem>\r\n            </Menu>\r\n        </>\r\n    );\r\n}\r\n","import { ShoppingCart } from \"@mui/icons-material\";\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Typography,\r\n    List,\r\n    ListItem,\r\n    IconButton,\r\n    Badge,\r\n} from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport Brightness4Icon from \"@mui/icons-material/Brightness4\";\r\nimport Brightness7Icon from \"@mui/icons-material/Brightness7\";\r\nimport { useAppSelector } from \"../store/configureStore\";\r\nimport SignedInMenu from \"./SignedInMenu\";\r\n\r\ninterface Props {\r\n    darkMode: boolean;\r\n    handleThemeChange: () => void;\r\n}\r\n\r\nconst midLinks = [\r\n    { title: \"catalog\", path: \"/catalog\" },\r\n    { title: \"about\", path: \"/about\" },\r\n    { title: \"contact\", path: \"/contact\" },\r\n];\r\n\r\nconst rightLinks = [\r\n    { title: \"login\", path: \"/login\" },\r\n    { title: \"register\", path: \"/register\" },\r\n];\r\n\r\nconst navStyles = {\r\n    color: \"inherit\",\r\n    textDecoration: \"none\",\r\n    typography: \"h6\",\r\n    \"&:hover\": {\r\n        color: \"grey.500\",\r\n    },\r\n    \"&.active\": {\r\n        color: \"text.secondary\",\r\n    },\r\n};\r\n\r\nexport default function Header({ darkMode, handleThemeChange }: Props) {\r\n    const { basket } = useAppSelector((state) => state.basket);\r\n    const { user } = useAppSelector((state) => state.account);\r\n    const itemCount = basket?.items.reduce(\r\n        (sum, item) => sum + item.quantity,\r\n        0\r\n    );\r\n    return (\r\n        <AppBar position='static'>\r\n            <Toolbar\r\n                sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                }}\r\n            >\r\n                <Box display='flex' alignItems='center'>\r\n                    <Typography\r\n                        variant='h6'\r\n                        component={NavLink}\r\n                        to='/'\r\n                        exact\r\n                        sx={navStyles}\r\n                    >\r\n                        RE-STORE\r\n                    </Typography>\r\n                    <IconButton\r\n                        sx={{ ml: 1 }}\r\n                        onClick={handleThemeChange}\r\n                        color='inherit'\r\n                    >\r\n                        {darkMode ? <Brightness7Icon /> : <Brightness4Icon />}\r\n                    </IconButton>\r\n                </Box>\r\n                <Box>\r\n                    <List sx={{ display: \"flex\" }}>\r\n                        {midLinks.map(({ title, path }) => (\r\n                            <ListItem\r\n                                component={NavLink}\r\n                                to={path}\r\n                                key={path}\r\n                                sx={navStyles}\r\n                            >\r\n                                {title.toUpperCase()}\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Box>\r\n                <Box display='flex' alignItems='center'>\r\n                    <IconButton\r\n                        component={Link}\r\n                        to='/basket'\r\n                        size='large'\r\n                        sx={{ color: \"inherit\" }}\r\n                    >\r\n                        <Badge badgeContent={itemCount} color='secondary'>\r\n                            <ShoppingCart />\r\n                        </Badge>\r\n                    </IconButton>\r\n                    {user ? (\r\n                        <SignedInMenu />\r\n                    ) : (\r\n                        <List sx={{ display: \"flex\" }}>\r\n                            {rightLinks.map(({ title, path }) => (\r\n                                <ListItem\r\n                                    component={NavLink}\r\n                                    to={path}\r\n                                    key={path}\r\n                                    sx={navStyles}\r\n                                >\r\n                                    {title.toUpperCase()}\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    )}\r\n                </Box>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n","import { Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport Slider from \"react-slick\";\r\n\r\nexport default function HomePage() {\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Slider {...settings}>\r\n                <div>\r\n                    <img\r\n                        src='/images/hero1.jpg'\r\n                        alt='hero'\r\n                        style={{\r\n                            display: \"block\",\r\n                            width: \"100%\",\r\n                            maxHeight: 500,\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <img\r\n                        src='/images/hero2.jpg'\r\n                        alt='hero'\r\n                        style={{\r\n                            display: \"block\",\r\n                            width: \"100%\",\r\n                            maxHeight: 500,\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <img\r\n                        src='/images/hero3.jpg'\r\n                        alt='hero'\r\n                        style={{\r\n                            display: \"block\",\r\n                            width: \"100%\",\r\n                            maxHeight: 500,\r\n                        }}\r\n                    />\r\n                </div>\r\n            </Slider>\r\n\r\n            <Box display='flex' justifyContent='center' sx={{ p: 4 }}>\r\n                <Typography variant='h1'>Welcome to the shop</Typography>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\n","import { ComponentType } from \"react\";\r\nimport {\r\n    Redirect,\r\n    Route,\r\n    RouteComponentProps,\r\n    RouteProps,\r\n} from \"react-router-dom\";\r\nimport { useAppSelector } from \"../store/configureStore\";\r\n\r\ninterface Props extends RouteProps {\r\n    component: ComponentType<RouteComponentProps<any>> | ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n    const { user } = useAppSelector((state) => state.account);\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                user ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/login\",\r\n                            state: { from: props.location },\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\n","import { LoadingButton } from \"@mui/lab\";\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    CardMedia,\r\n    Typography,\r\n} from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { currencyFormat } from \"../../app/util/util\";\r\nimport { addBasketItemAsync } from \"../basket/basketSlice\";\r\n\r\ninterface Props {\r\n    product: Product;\r\n}\r\n\r\nexport default function ProductCard({ product }: Props) {\r\n    const { status } = useAppSelector((state) => state.basket);\r\n    const dispatch = useAppDispatch();\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar sx={{ bgcolor: \"secondary.main\" }}>\r\n                        {product.name.charAt(0).toUpperCase()}\r\n                    </Avatar>\r\n                }\r\n                title={product.name}\r\n                titleTypographyProps={{\r\n                    sx: { fontWeight: \"bold\", color: \"primary.main\" },\r\n                }}\r\n            />\r\n            <CardMedia\r\n                sx={{\r\n                    height: 140,\r\n                    backgroundSize: \"contain\",\r\n                    bgcolor: \"primary.light\",\r\n                }}\r\n                image={product.pictureUrl}\r\n                title={product.name}\r\n            />\r\n            <CardContent>\r\n                <Typography gutterBottom color='secondary' variant='h5'>\r\n                    {currencyFormat(product.price)}\r\n                </Typography>\r\n                <Typography variant='body2' color='text.secondary'>\r\n                    {product.brand} / {product.brand}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <LoadingButton\r\n                    loading={status.includes(\"pendingAddItem\" + product.id)}\r\n                    onClick={() =>\r\n                        dispatch(addBasketItemAsync({ productId: product.id }))\r\n                    }\r\n                    size='small'\r\n                >\r\n                    Add to cart\r\n                </LoadingButton>\r\n                <Button\r\n                    component={Link}\r\n                    to={`/catalog/${product.id}`}\r\n                    size='small'\r\n                >\r\n                    View\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n","import {\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    Grid,\r\n    Skeleton,\r\n} from \"@mui/material\";\r\n\r\nexport default function ProductCardSkeleton() {\r\n    return (\r\n        <Grid item xs component={Card}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Skeleton\r\n                        animation='wave'\r\n                        variant='circular'\r\n                        width={40}\r\n                        height={40}\r\n                    />\r\n                }\r\n                title={\r\n                    <Skeleton\r\n                        animation='wave'\r\n                        height={10}\r\n                        width='80%'\r\n                        style={{ marginBottom: 6 }}\r\n                    />\r\n                }\r\n            />\r\n            <Skeleton\r\n                sx={{ height: 190 }}\r\n                animation='wave'\r\n                variant='rectangular'\r\n            />\r\n            <CardContent>\r\n                <>\r\n                    <Skeleton\r\n                        animation='wave'\r\n                        height={10}\r\n                        style={{ marginBottom: 6 }}\r\n                    />\r\n                    <Skeleton animation='wave' height={10} width='80%' />\r\n                </>\r\n            </CardContent>\r\n            <CardActions>\r\n                <>\r\n                    <Skeleton animation='wave' height={10} width='40%' />\r\n                    <Skeleton animation='wave' height={10} width='20%' />\r\n                </>\r\n            </CardActions>\r\n        </Grid>\r\n    );\r\n}\r\n","import { Grid } from \"@mui/material\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport ProductCardSkeleton from \"../catalog/ProductCardSkeleton\";\r\n\r\ninterface Props {\r\n    products: Product[];\r\n}\r\n\r\nexport default function ProductList({ products }: Props) {\r\n    const { productsLoaded } = useAppSelector((state) => state.catalog);\r\n    return (\r\n        <Grid container spacing={4}>\r\n            {products.map((product) => (\r\n                <Grid item xs={4} key={product.id}>\r\n                    {!productsLoaded ? (\r\n                        <ProductCardSkeleton />\r\n                    ) : (\r\n                        <ProductCard key={product.id} product={product} />\r\n                    )}\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    );\r\n}\r\n","import { debounce, TextField } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { setProductParams } from \"./catalogSlice\";\r\n\r\nexport default function ProductSearch() {\r\n    const { productParams } = useAppSelector((state) => state.catalog);\r\n    const [searchTerm, setSearchTerm] = useState(productParams.searchTerm);\r\n    const dispatch = useAppDispatch();\r\n\r\n    const debouncedSearch = debounce((event: any) => {\r\n        dispatch(setProductParams({ searchTerm: event.target.value }));\r\n    }, 1000);\r\n\r\n    return (\r\n        <TextField\r\n            label='Search products'\r\n            variant='outlined'\r\n            fullWidth\r\n            value={searchTerm || \"\"}\r\n            onChange={(event: any) => {\r\n                setSearchTerm(event.target.value);\r\n                debouncedSearch(event);\r\n            }}\r\n        />\r\n    );\r\n}\r\n","import { Backdrop, Box, CircularProgress, Typography } from \"@mui/material\";\r\n\r\ninterface Props {\r\n    message?: string;\r\n}\r\n\r\nexport default function LoadingComponent({ message = \"Loading...\" }: Props) {\r\n    return (\r\n        <Backdrop open={true} invisible={true}>\r\n            <Box\r\n                display='flex'\r\n                justifyContent='center'\r\n                alignItems='center'\r\n                height='100vh'\r\n            >\r\n                <CircularProgress size={100} color='secondary' />\r\n                <Typography\r\n                    variant='h4'\r\n                    sx={{\r\n                        justifyContent: \"center\",\r\n                        position: \"fixed\",\r\n                        top: \"60%\",\r\n                    }}\r\n                >\r\n                    {message}\r\n                </Typography>\r\n            </Box>\r\n        </Backdrop>\r\n    );\r\n}\r\n","import {\r\n    FormControl,\r\n    RadioGroup,\r\n    FormControlLabel,\r\n    Radio,\r\n} from \"@mui/material\";\r\n\r\ninterface Props {\r\n    options: any[];\r\n    onChange: (event: any) => void;\r\n    selectedValue: string;\r\n}\r\n\r\nexport default function RadioButtonGroup({\r\n    options,\r\n    onChange,\r\n    selectedValue,\r\n}: Props) {\r\n    return (\r\n        <FormControl component='fieldset'>\r\n            <RadioGroup onChange={onChange} value={selectedValue}>\r\n                {options.map(({ value, label }) => (\r\n                    <FormControlLabel\r\n                        value={value}\r\n                        control={<Radio />}\r\n                        label={label}\r\n                        key={value}\r\n                    />\r\n                ))}\r\n            </RadioGroup>\r\n        </FormControl>\r\n    );\r\n}\r\n","import { FormGroup, FormControlLabel, Checkbox } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\n\r\ninterface Props {\r\n    items: string[];\r\n    checked?: string[];\r\n    onChange: (items: string[]) => void;\r\n}\r\n\r\nexport default function CheckboxButtons({ items, checked, onChange }: Props) {\r\n    const [checkedItems, setCheckedItems] = useState(checked || []);\r\n\r\n    function handleChecked(value: string) {\r\n        const currentIndex = checkedItems.findIndex((item) => item === value);\r\n        let newChecked: string[] = [];\r\n        if (currentIndex === -1) newChecked = [...checkedItems, value];\r\n        else newChecked = checkedItems.filter((item) => item !== value);\r\n        setCheckedItems(newChecked);\r\n        onChange(newChecked);\r\n    }\r\n\r\n    return (\r\n        <FormGroup>\r\n            {items.map((item) => (\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox\r\n                            checked={checkedItems.indexOf(item) !== -1}\r\n                            onClick={() => handleChecked(item)}\r\n                        />\r\n                    }\r\n                    label={item}\r\n                    key={item}\r\n                />\r\n            ))}\r\n        </FormGroup>\r\n    );\r\n}\r\n","import { Box, Pagination, Typography } from \"@mui/material\";\r\nimport { MetaData } from \"../models/pagination\";\r\n\r\ninterface Props {\r\n    metaData: MetaData;\r\n    onPageChange: (page: number) => void;\r\n}\r\n\r\nexport default function AppPagination({ metaData, onPageChange }: Props) {\r\n    const { currentPage, totalCount, totalPages, pageSize } = metaData;\r\n    return (\r\n        <Box display='flex' justifyContent='space-between' alignItems='center'>\r\n            <Typography>\r\n                Displaying {(currentPage - 1) * pageSize + 1}-\r\n                {currentPage * pageSize > totalCount\r\n                    ? totalCount\r\n                    : currentPage * pageSize}{\" \"}\r\n                of {totalCount} items\r\n            </Typography>\r\n            <Pagination\r\n                color='secondary'\r\n                size='large'\r\n                count={totalPages}\r\n                page={currentPage}\r\n                onChange={(e, page) => onPageChange(page)}\r\n            />\r\n        </Box>\r\n    );\r\n}\r\n","import ProductList from \"./ProductList\";\r\nimport ProductSearch from \"./ProductSearch\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport RadioButtonGroup from \"../../app/components/RadioButtonGroup\";\r\nimport CheckboxButtons from \"../../app/components/CheckboxButtons\";\r\nimport AppPagination from \"../../app/components/AppPagination\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport {\r\n    fetchFilters,\r\n    fetchProductsAsync,\r\n    productSelectors,\r\n    setPageNumber,\r\n    setProductParams,\r\n} from \"./catalogSlice\";\r\nimport { useEffect } from \"react\";\r\nimport { Grid, Paper } from \"@mui/material\";\r\n\r\nconst sortOptions = [\r\n    { value: \"name\", label: \"Alphabetical\" },\r\n    { value: \"priceDesc\", label: \"Price - High to low\" },\r\n    { value: \"price\", label: \"Price - Low to high\" },\r\n];\r\n\r\nexport default function Catalog() {\r\n    const products = useAppSelector(productSelectors.selectAll);\r\n    const {\r\n        productsLoaded,\r\n        filtersLoaded,\r\n        brands,\r\n        types,\r\n        productParams,\r\n        metaData,\r\n    } = useAppSelector((state) => state.catalog);\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!productsLoaded) dispatch(fetchProductsAsync());\r\n    }, [productsLoaded, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (!filtersLoaded) dispatch(fetchFilters());\r\n    }, [dispatch, filtersLoaded]);\r\n\r\n    if (!filtersLoaded)\r\n        return <LoadingComponent message='Loading products...' />;\r\n\r\n    return (\r\n        <Grid container columnSpacing={4}>\r\n            <Grid item xs={3}>\r\n                <Paper sx={{ mb: 2 }}>\r\n                    <ProductSearch />\r\n                </Paper>\r\n                <Paper sx={{ mb: 2, p: 2 }}>\r\n                    <RadioButtonGroup\r\n                        selectedValue={productParams.orderBy}\r\n                        options={sortOptions}\r\n                        onChange={(e) =>\r\n                            dispatch(\r\n                                setProductParams({ orderBy: e.target.value })\r\n                            )\r\n                        }\r\n                    />\r\n                </Paper>\r\n                <Paper sx={{ mb: 2, p: 2 }}>\r\n                    <CheckboxButtons\r\n                        items={brands}\r\n                        checked={productParams.brands}\r\n                        onChange={(items: string[]) =>\r\n                            dispatch(setProductParams({ brands: items }))\r\n                        }\r\n                    />\r\n                </Paper>\r\n                <Paper sx={{ mb: 2, p: 2 }}>\r\n                    <CheckboxButtons\r\n                        items={types}\r\n                        checked={productParams.types}\r\n                        onChange={(items: string[]) =>\r\n                            dispatch(setProductParams({ types: items }))\r\n                        }\r\n                    />\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n                <ProductList products={products} />\r\n            </Grid>\r\n            <Grid item xs={3} />\r\n            <Grid item xs={9} sx={{ mb: 2 }}>\r\n                {metaData && (\r\n                    <AppPagination\r\n                        metaData={metaData}\r\n                        onPageChange={(page: number) =>\r\n                            dispatch(setPageNumber({ pageNumber: page }))\r\n                        }\r\n                    />\r\n                )}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <Container component={Paper} sx={{ height: 400 }}>\r\n            <Typography gutterBottom variant='h3'>\r\n                Oops - we could not find what you are looking for\r\n            </Typography>\r\n            <Divider />\r\n            <Button fullWidth component={Link} to='catalog'>\r\n                Go back to Shop\r\n            </Button>\r\n        </Container>\r\n    );\r\n}\r\n","import { LoadingButton } from \"@mui/lab\";\r\nimport {\r\n    Divider,\r\n    Grid,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableRow,\r\n    TextField,\r\n    Typography,\r\n} from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport NotFound from \"../../app/errors/NotFound\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport {\r\n    addBasketItemAsync,\r\n    removeBasketItemAsync,\r\n} from \"../basket/basketSlice\";\r\nimport { fetchProductAsync, productSelectors } from \"./catalogSlice\";\r\n\r\nexport default function ProductDetails() {\r\n    const { basket, status } = useAppSelector((state) => state.basket);\r\n    const dispatch = useAppDispatch();\r\n    const { id } = useParams<{ id: string }>();\r\n    const product = useAppSelector((state) =>\r\n        productSelectors.selectById(state, id)\r\n    );\r\n    const { status: productStatus } = useAppSelector((state) => state.catalog);\r\n    const [quantity, setQuantity] = useState(0);\r\n    const item = basket?.items.find((i) => i.productId === product?.id);\r\n\r\n    useEffect(() => {\r\n        if (item) setQuantity(item.quantity);\r\n        if (!product) dispatch(fetchProductAsync(parseInt(id)));\r\n    }, [id, item, dispatch, product]);\r\n\r\n    function handleInputChange(event: any) {\r\n        if (event.target.value >= 0) {\r\n            setQuantity(parseInt(event.target.value));\r\n        }\r\n    }\r\n\r\n    function handleUpdateCart() {\r\n        if (!item || quantity > item.quantity) {\r\n            const updatedQuantity = item ? quantity - item.quantity : quantity;\r\n            dispatch(\r\n                addBasketItemAsync({\r\n                    productId: product?.id!,\r\n                    quantity: updatedQuantity,\r\n                })\r\n            );\r\n        } else {\r\n            const updatedQuantity = item.quantity - quantity;\r\n            dispatch(\r\n                removeBasketItemAsync({\r\n                    productId: product?.id!,\r\n                    quantity: updatedQuantity,\r\n                })\r\n            );\r\n        }\r\n    }\r\n\r\n    if (productStatus.includes(\"pending\"))\r\n        return <LoadingComponent message='Loading product...' />;\r\n\r\n    if (!product) return <NotFound />;\r\n\r\n    return (\r\n        <Grid container spacing={6}>\r\n            <Grid item xs={6}>\r\n                <img\r\n                    src={product.pictureUrl}\r\n                    alt={product.name}\r\n                    style={{ width: \"100%\" }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Typography variant='h3'>{product.name}</Typography>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant='h4' color='secondary'>\r\n                    $ {(product.price / 100).toFixed(2)}\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>{product.name}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Description</TableCell>\r\n                                <TableCell>{product.description}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Type</TableCell>\r\n                                <TableCell>{product.type}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Brand</TableCell>\r\n                                <TableCell>{product.brand}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Quantity in stock</TableCell>\r\n                                <TableCell>{product.quantityInStock}</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            onChange={handleInputChange}\r\n                            variant='outlined'\r\n                            type='number'\r\n                            label='Quantity in Cart'\r\n                            fullWidth\r\n                            value={quantity}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <LoadingButton\r\n                            disabled={\r\n                                item?.quantity === quantity ||\r\n                                (!item && quantity === 0)\r\n                            }\r\n                            loading={status.includes(\"pending\")}\r\n                            onClick={handleUpdateCart}\r\n                            sx={{ height: \"55px\" }}\r\n                            color='primary'\r\n                            size='large'\r\n                            variant='contained'\r\n                            fullWidth\r\n                        >\r\n                            {item ? \"Update Quantity\" : \"Add to Cart\"}\r\n                        </LoadingButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n","import {\r\n    Alert,\r\n    AlertTitle,\r\n    Button,\r\n    ButtonGroup,\r\n    Container,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    Typography,\r\n} from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\n\r\nexport default function AboutPage() {\r\n    const [validationErrors, setValidationErrors] = useState<string[]>([]);\r\n\r\n    function getValidationError() {\r\n        agent.TestErrors.getValidationError()\r\n            .then(() => console.log(\"should not see this\"))\r\n            .catch((error) => setValidationErrors(error));\r\n    }\r\n    return (\r\n        <Container>\r\n            <Typography gutterBottom variant='h2'>\r\n                Errors for testing purposes\r\n            </Typography>\r\n            <ButtonGroup fullWidth>\r\n                <Button\r\n                    variant='contained'\r\n                    onClick={() =>\r\n                        agent.TestErrors.get400Error().catch((error) =>\r\n                            console.log(error)\r\n                        )\r\n                    }\r\n                >\r\n                    Test 400 Error\r\n                </Button>\r\n                <Button\r\n                    variant='contained'\r\n                    onClick={() =>\r\n                        agent.TestErrors.get401Error().catch((error) =>\r\n                            console.log(error)\r\n                        )\r\n                    }\r\n                >\r\n                    Test 401 Error\r\n                </Button>\r\n                <Button\r\n                    variant='contained'\r\n                    onClick={() =>\r\n                        agent.TestErrors.get404Error().catch((error) =>\r\n                            console.log(error)\r\n                        )\r\n                    }\r\n                >\r\n                    Test 404 Error\r\n                </Button>\r\n                <Button\r\n                    variant='contained'\r\n                    onClick={() =>\r\n                        agent.TestErrors.get500Error().catch((error) =>\r\n                            console.log(error)\r\n                        )\r\n                    }\r\n                >\r\n                    Test 500 Error\r\n                </Button>\r\n                <Button variant='contained' onClick={getValidationError}>\r\n                    Test Validation Error\r\n                </Button>\r\n            </ButtonGroup>\r\n            {validationErrors.length > 0 && (\r\n                <Alert severity='error'>\r\n                    <AlertTitle>Validation Errors</AlertTitle>\r\n                    <List>\r\n                        {validationErrors.map((error) => (\r\n                            <ListItem key={error}>\r\n                                <ListItemText>{error}</ListItemText>\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Alert>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n","import { Button, ButtonGroup, Typography } from \"@mui/material\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { decrement, increment } from \"./counterSlice\";\r\n\r\nexport default function ContactPage() {\r\n    const dispatch = useAppDispatch();\r\n    const { data, title } = useAppSelector((state) => state.counter);\r\n    return (\r\n        <>\r\n            <Typography variant='h2'>{title}</Typography>\r\n            <Typography variant='h5'>The data is: {data}</Typography>\r\n            <ButtonGroup>\r\n                <Button\r\n                    onClick={() => dispatch(decrement(1))}\r\n                    variant='contained'\r\n                    color='error'\r\n                >\r\n                    Decrement\r\n                </Button>\r\n                <Button\r\n                    onClick={() => dispatch(increment(1))}\r\n                    variant='contained'\r\n                    color='primary'\r\n                >\r\n                    Increment\r\n                </Button>\r\n                <Button\r\n                    onClick={() => dispatch(increment(5))}\r\n                    variant='contained'\r\n                    color='secondary'\r\n                >\r\n                    Increment by 5\r\n                </Button>\r\n            </ButtonGroup>\r\n        </>\r\n    );\r\n}\r\n","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nexport default function ServerError() {\r\n    const history = useHistory();\r\n    const { state } = useLocation<any>();\r\n    return (\r\n        <Container component={Paper}>\r\n            {state?.error ? (\r\n                <>\r\n                    <Typography variant='h3' color='error' gutterBottom>\r\n                        {state.error.title}\r\n                    </Typography>\r\n                    <Divider />\r\n                    <Typography>\r\n                        {state.error.detail || \"Internal server error\"}\r\n                    </Typography>\r\n                </>\r\n            ) : (\r\n                <Typography variant='h5' gutterBottom>\r\n                    Server Error\r\n                </Typography>\r\n            )}\r\n            <Button onClick={() => history.push(\"/catalog\")}>\r\n                Go back to the store\r\n            </Button>\r\n        </Container>\r\n    );\r\n}\r\n","import {\r\n    TableContainer,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableRow,\r\n    TableCell,\r\n} from \"@mui/material\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport { currencyFormat } from \"../../app/util/util\";\r\n\r\ninterface Props {\r\n    subtotal?: number;\r\n}\r\n\r\nexport default function BasketSummary({ subtotal }: Props) {\r\n    const { basket } = useAppSelector((state) => state.basket);\r\n\r\n    if (subtotal === undefined)\r\n        subtotal =\r\n            basket?.items.reduce(\r\n                (sum, item) => sum + item.quantity * item.price,\r\n                0\r\n            ) ?? 0;\r\n    const deliveryFee = subtotal > 10000 ? 0 : 500;\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper} variant={\"outlined\"}>\r\n                <Table>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Subtotal</TableCell>\r\n                            <TableCell align='right'>\r\n                                {currencyFormat(subtotal)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Delivery fee*</TableCell>\r\n                            <TableCell align='right'>\r\n                                {currencyFormat(deliveryFee)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Total</TableCell>\r\n                            <TableCell align='right'>\r\n                                {currencyFormat(subtotal + deliveryFee)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>\r\n                                <span style={{ fontStyle: \"italic\" }}>\r\n                                    *Orders over $100 qualify for free delivery\r\n                                </span>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    );\r\n}\r\n","import { Remove, Add, Delete } from \"@mui/icons-material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Box } from \"@mui/material\";\r\nimport { BasketItem } from \"../../app/models/basket\";\r\nimport { useAppSelector, useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { currencyFormat } from \"../../app/util/util\";\r\nimport { removeBasketItemAsync, addBasketItemAsync } from \"./basketSlice\";\r\n\r\ninterface Props {\r\n    items: BasketItem[];\r\n    isBasket?: boolean;\r\n}\r\n\r\nexport default function BasketTable({items, isBasket = true}: Props) {\r\n    const { status } = useAppSelector((state) => state.basket);\r\n    const dispatch = useAppDispatch();\r\n    return (\r\n        <TableContainer component={Paper}>\r\n                <Table sx={{ minWidth: 650 }}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Product</TableCell>\r\n                            <TableCell align='right'>Price</TableCell>\r\n                            <TableCell align='center'>Quantity</TableCell>\r\n                            <TableCell align='right'>Subtotal</TableCell>\r\n                            {isBasket &&\r\n                            <TableCell align='right'></TableCell>}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {items.map((item) => (\r\n                            <TableRow\r\n                                key={item.productId}\r\n                                sx={{\r\n                                    \"&:last-child td, &:last-child th\": {\r\n                                        border: 0,\r\n                                    },\r\n                                }}\r\n                            >\r\n                                <TableCell component='th' scope='row'>\r\n                                    <Box display='flex' alignItems='center'>\r\n                                        <img\r\n                                            src={item.pictureUrl}\r\n                                            alt={item.name}\r\n                                            style={{\r\n                                                height: 50,\r\n                                                marginRight: 20,\r\n                                            }}\r\n                                        />\r\n                                        <span>{item.name}</span>\r\n                                    </Box>\r\n                                </TableCell>\r\n                                <TableCell align='right'>\r\n                                    {currencyFormat(item.price)}\r\n                                </TableCell>\r\n                                <TableCell align='center'>\r\n                                {isBasket &&\r\n                                    <LoadingButton\r\n                                        loading={\r\n                                            status ===\r\n                                            \"pendingRemoveItem\" +\r\n                                                item.productId +\r\n                                                \"rem\"\r\n                                        }\r\n                                        onClick={() =>\r\n                                            dispatch(\r\n                                                removeBasketItemAsync({\r\n                                                    productId: item.productId,\r\n                                                    quantity: 1,\r\n                                                    name: \"rem\",\r\n                                                })\r\n                                            )\r\n                                        }\r\n                                        color='error'\r\n                                    >\r\n                                        <Remove />\r\n                                    </LoadingButton>}\r\n                                    {item.quantity}\r\n                                    {isBasket &&\r\n                                    <LoadingButton\r\n                                        loading={\r\n                                            status ===\r\n                                            \"pendingAddItem\" + item.productId\r\n                                        }\r\n                                        onClick={() =>\r\n                                            dispatch(\r\n                                                addBasketItemAsync({\r\n                                                    productId: item.productId,\r\n                                                })\r\n                                            )\r\n                                        }\r\n                                        color='secondary'\r\n                                    >\r\n                                        <Add />\r\n                                    </LoadingButton>}\r\n                                </TableCell>\r\n                                <TableCell align='right'>\r\n                                    {currencyFormat(item.price * item.quantity)}\r\n                                </TableCell>\r\n                                {isBasket &&\r\n                                <TableCell align='right'>\r\n                                    <LoadingButton\r\n                                        loading={\r\n                                            status ===\r\n                                            \"pendingRemoveItem\" +\r\n                                                item.productId +\r\n                                                \"del\"\r\n                                        }\r\n                                        onClick={() =>\r\n                                            dispatch(\r\n                                                removeBasketItemAsync({\r\n                                                    productId: item.productId,\r\n                                                    quantity: item.quantity,\r\n                                                    name: \"del\",\r\n                                                })\r\n                                            )\r\n                                        }\r\n                                        color='error'\r\n                                    >\r\n                                        <Delete />\r\n                                    </LoadingButton>\r\n                                </TableCell>}\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n    )\r\n}","import {\r\n    Button,\r\n    Grid,\r\n    Typography,\r\n} from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport BasketSummary from \"./BasketSummary\";\r\nimport BasketTable from \"./BasketTable\";\r\n\r\nexport default function BasketPage() {\r\n    const { basket } = useAppSelector((state) => state.basket);\r\n\r\n    if (!basket)\r\n        return <Typography variant='h3'>Your basket is empty</Typography>;\r\n\r\n    return (\r\n        <>\r\n            <BasketTable items={basket.items} />\r\n            <Grid container>\r\n                <Grid item xs={6} />\r\n                <Grid item xs={6}>\r\n                    <BasketSummary />\r\n                    <Button\r\n                        component={Link}\r\n                        to='/checkout'\r\n                        variant='contained'\r\n                        size='large'\r\n                        fullWidth\r\n                    >\r\n                        Ceckout\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { Paper } from \"@mui/material\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { FieldValues, useForm } from \"react-hook-form\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { signInUser } from \"./accountSlice\";\r\n\r\nexport default function Login() {\r\n    const history = useHistory();\r\n    const location = useLocation<any>();\r\n    const dispatch = useAppDispatch();\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { isSubmitting, errors, isValid },\r\n    } = useForm({\r\n        mode: \"all\",\r\n    });\r\n\r\n    async function submitForm(data: FieldValues) {\r\n        try {\r\n            await dispatch(signInUser(data));\r\n            history.push(location.state.from.pathname || \"/catalog\");\r\n        } catch (error: any) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container\r\n            component={Paper}\r\n            maxWidth='sm'\r\n            sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                p: 4,\r\n            }}\r\n        >\r\n            <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component='h1' variant='h5'>\r\n                Sign in\r\n            </Typography>\r\n            <Box\r\n                component='form'\r\n                onSubmit={handleSubmit(submitForm)}\r\n                noValidate\r\n                sx={{ mt: 1 }}\r\n            >\r\n                <TextField\r\n                    margin='normal'\r\n                    fullWidth\r\n                    label='Username'\r\n                    autoComplete='email'\r\n                    autoFocus\r\n                    {...register(\"username\", {\r\n                        required: \"Username is required\",\r\n                    })}\r\n                    error={!!errors.username}\r\n                    helperText={errors?.username?.message}\r\n                />\r\n                <TextField\r\n                    margin='normal'\r\n                    fullWidth\r\n                    label='Password'\r\n                    type='password'\r\n                    autoComplete='current-password'\r\n                    {...register(\"password\", {\r\n                        required: \"Password is required\",\r\n                    })}\r\n                    error={!!errors.password}\r\n                    helperText={errors?.password?.message}\r\n                />\r\n                <LoadingButton\r\n                    disabled={!isValid}\r\n                    loading={isSubmitting}\r\n                    type='submit'\r\n                    fullWidth\r\n                    variant='contained'\r\n                    sx={{ mt: 3, mb: 2 }}\r\n                >\r\n                    Sign In\r\n                </LoadingButton>\r\n                <Grid container>\r\n                    <Grid item>\r\n                        <Link to='/register'>\r\n                            {\"Don't have an account? Sign Up\"}\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n","import Avatar from \"@mui/material/Avatar\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { Paper } from \"@mui/material\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function Register() {\r\n    const history = useHistory();\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        setError,\r\n        formState: { isSubmitting, errors, isValid },\r\n    } = useForm({\r\n        mode: \"all\",\r\n    });\r\n\r\n    function handleApiErrors(errors: any) {\r\n        if (errors) {\r\n            errors.forEach((error: string) => {\r\n                if (error.includes(\"Password\")) {\r\n                    setError(\"password\", { message: error });\r\n                } else if (error.includes(\"Email\")) {\r\n                    setError(\"email\", { message: error });\r\n                } else if (error.includes(\"Username\")) {\r\n                    setError(\"username\", { message: error });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container\r\n            component={Paper}\r\n            maxWidth='sm'\r\n            sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                p: 4,\r\n            }}\r\n        >\r\n            <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component='h1' variant='h5'>\r\n                Register\r\n            </Typography>\r\n            <Box\r\n                component='form'\r\n                onSubmit={handleSubmit((data) =>\r\n                    agent.Account.register(data)\r\n                        .then(() => {\r\n                            toast.success(\r\n                                \"Registration successful - you can now login\"\r\n                            );\r\n                            history.push(\"/login\");\r\n                        })\r\n                        .catch((error) => handleApiErrors(error))\r\n                )}\r\n                noValidate\r\n                sx={{ mt: 1 }}\r\n            >\r\n                <TextField\r\n                    margin='normal'\r\n                    fullWidth\r\n                    label='Username'\r\n                    autoComplete='email'\r\n                    autoFocus\r\n                    {...register(\"username\", {\r\n                        required: \"Username is required\",\r\n                    })}\r\n                    error={!!errors.username}\r\n                    helperText={errors?.username?.message}\r\n                />\r\n                <TextField\r\n                    margin='normal'\r\n                    fullWidth\r\n                    label='Email address'\r\n                    autoComplete='email'\r\n                    {...register(\"email\", {\r\n                        required: \"Email is required\",\r\n                        pattern: {\r\n                            value: /^\\w+[\\w-.]*@\\w+((-\\w+)|(\\w*))\\.[a-z]{2,3}$/,\r\n                            message: \"Not a valid email address\",\r\n                        },\r\n                    })}\r\n                    error={!!errors.email}\r\n                    helperText={errors?.email?.message}\r\n                />\r\n                <TextField\r\n                    margin='normal'\r\n                    fullWidth\r\n                    label='Password'\r\n                    type='password'\r\n                    autoComplete='current-password'\r\n                    {...register(\"password\", {\r\n                        required: \"Password is required\",\r\n                        pattern: {\r\n                            value: /(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$/,\r\n                            message:\r\n                                \"Password does not meet complexity requirement\",\r\n                        },\r\n                    })}\r\n                    error={!!errors.password}\r\n                    helperText={errors?.password?.message}\r\n                />\r\n                <LoadingButton\r\n                    disabled={!isValid}\r\n                    loading={isSubmitting}\r\n                    type='submit'\r\n                    fullWidth\r\n                    variant='contained'\r\n                    sx={{ mt: 3, mb: 2 }}\r\n                >\r\n                    Register\r\n                </LoadingButton>\r\n                <Grid container>\r\n                    <Grid item>\r\n                        <Link to='/login'>\r\n                            {\"Already have an account? Sign In\"}\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n","import { Button, Grid, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { BasketItem } from \"../../app/models/basket\";\r\nimport { Order } from \"../../app/models/order\";\r\nimport BasketSummary from \"../basket/BasketSummary\";\r\nimport BasketTable from \"../basket/BasketTable\";\r\n\r\ninterface Props {\r\n    order: Order;\r\n    setSelectedOrder: (id: number) => void;\r\n}\r\n\r\nexport default function OrderDetailed({ order, setSelectedOrder }: Props) {\r\n    const subtotal =\r\n        order.orderItems.reduce(\r\n            (sum, item) => sum + item.quantity * item.price,\r\n            0\r\n        ) ?? 0;\r\n    return (\r\n        <>\r\n            <Box display='flex' justifyContent='space-between'>\r\n                <Typography sx={{ p: 2 }} gutterBottom variant='h4'>\r\n                    Order# {order.id} - {order.orderStatus}\r\n                </Typography>\r\n                <Button\r\n                    onClick={() => setSelectedOrder(0)}\r\n                    sx={{ m: 2 }}\r\n                    size='large'\r\n                    variant='contained'\r\n                >\r\n                    Back to order\r\n                </Button>\r\n            </Box>\r\n            <BasketTable\r\n                items={order.orderItems as BasketItem[]}\r\n                isBasket={false}\r\n            />\r\n            <Grid container>\r\n                <Grid item xs={6} />\r\n                <Grid item xs={6}>\r\n                    <BasketSummary subtotal={subtotal} />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","import {\r\n    TableContainer,\r\n    Paper,\r\n    Table,\r\n    TableHead,\r\n    TableRow,\r\n    TableCell,\r\n    TableBody,\r\n    Button,\r\n} from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { Order } from \"../../app/models/order\";\r\nimport { currencyFormat } from \"../../app/util/util\";\r\nimport OrderDetailed from \"../orders/OrderDetailed\";\r\n\r\nexport default function Orders() {\r\n    const [orders, setOrders] = useState<Order[] | null>(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [selectedOrderNumber, setSelectedOrderNumber] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        agent.Orders.list()\r\n            .then((orders) => setOrders(orders))\r\n            .catch((error) => console.log(error))\r\n            .finally(() => setLoading(false));\r\n    }, []);\r\n\r\n    if (loading) return <LoadingComponent message='Loading orders...' />;\r\n\r\n    if (selectedOrderNumber > 0)\r\n        return (\r\n            <OrderDetailed\r\n                order={orders?.find((o) => o.id === selectedOrderNumber)!}\r\n                setSelectedOrder={setSelectedOrderNumber}\r\n            />\r\n        );\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }} aria-label='simple table'>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Order number</TableCell>\r\n                        <TableCell align='right'>Total</TableCell>\r\n                        <TableCell align='right'>Order Date</TableCell>\r\n                        <TableCell align='right'>Order Status</TableCell>\r\n                        <TableCell align='right'></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {orders?.map((order) => (\r\n                        <TableRow\r\n                            key={order.id}\r\n                            sx={{\r\n                                \"&:last-child td, &:last-child th\": {\r\n                                    border: 0,\r\n                                },\r\n                            }}\r\n                        >\r\n                            <TableCell component='th' scope='row'>\r\n                                {order.id}\r\n                            </TableCell>\r\n                            <TableCell align='right'>\r\n                                {currencyFormat(order.total)}\r\n                            </TableCell>\r\n                            <TableCell align='right'>\r\n                                {order.orderDate.split(\"T\")[0]}\r\n                            </TableCell>\r\n                            <TableCell align='right'>\r\n                                {order.orderStatus}\r\n                            </TableCell>\r\n                            <TableCell align='right'>\r\n                                <Button\r\n                                    onClick={() =>\r\n                                        setSelectedOrderNumber(order.id)\r\n                                    }\r\n                                >\r\n                                    View\r\n                                </Button>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n","import { Checkbox, FormControlLabel } from \"@mui/material\";\r\nimport { useController, UseControllerProps } from \"react-hook-form\";\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string;\r\n    disabled: boolean;\r\n}\r\n\r\nexport default function AppCheckbox(props: Props) {\r\n    const { field } = useController({ ...props, defaultValue: false });\r\n\r\n    return (\r\n        <FormControlLabel\r\n            control={\r\n                <Checkbox\r\n                    {...field}\r\n                    checked={field.value}\r\n                    color='secondary'\r\n                    disabled={props.disabled}\r\n                />\r\n            }\r\n            label={props.label}\r\n        />\r\n    );\r\n}\r\n","import { TextField } from \"@mui/material\";\r\nimport { useController, UseControllerProps } from \"react-hook-form\";\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string;\r\n}\r\n\r\nexport default function AppTextInput(props: Props) {\r\n    const { fieldState, field } = useController({ ...props, defaultValue: \"\" });\r\n    return (\r\n        <TextField\r\n            {...props}\r\n            {...field}\r\n            fullWidth\r\n            variant='outlined'\r\n            error={!!fieldState.error}\r\n            helperText={fieldState.error?.message}\r\n        />\r\n    );\r\n}\r\n","import Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport AppCheckbox from \"../../app/components/AppCheckbox\";\r\nimport { useFormContext } from \"react-hook-form\";\r\nimport AppTextInput from \"../../app/components/AppTextInput\";\r\n\r\nexport default function AddressForm() {\r\n    const { control, formState } = useFormContext();\r\n    return (\r\n        <>\r\n            <Typography variant='h6' gutterBottom>\r\n                Shipping address\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <AppTextInput\r\n                        control={control}\r\n                        name='fullName'\r\n                        label='Full name'\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppTextInput\r\n                        control={control}\r\n                        name='address1'\r\n                        label='Address 1'\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppTextInput\r\n                        control={control}\r\n                        name='address2'\r\n                        label='Address 2'\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='city' label='City' />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput\r\n                        control={control}\r\n                        name='state'\r\n                        label='State'\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='zip' label='Zip' />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput\r\n                        control={control}\r\n                        name='country'\r\n                        label='Country'\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppCheckbox\r\n                        disabled={!formState.isDirty}\r\n                        name='saveAddress'\r\n                        label='Save this as the default address'\r\n                        control={control}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","import { InputBaseComponentProps } from \"@mui/material\";\r\nimport { forwardRef, Ref, useImperativeHandle, useRef } from \"react\";\r\n\r\ninterface Props extends InputBaseComponentProps {}\r\n\r\nexport const StripeInput = forwardRef(function StripeInput(\r\n    { component: Component, ...props }: Props,\r\n    ref: Ref<unknown>\r\n) {\r\n    const elementRef = useRef<any>();\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => elementRef.current.focus,\r\n    }));\r\n\r\n    return (\r\n        <Component\r\n            onReady={(element: any) => (elementRef.current = element)}\r\n            {...props}\r\n        />\r\n    );\r\n});\r\n","import Typography from \"@mui/material/Typography\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useFormContext } from \"react-hook-form\";\r\nimport AppTextInput from \"../../app/components/AppTextInput\";\r\nimport {\r\n    CardCvcElement,\r\n    CardExpiryElement,\r\n    CardNumberElement,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { StripeInput } from \"./StripeInput\";\r\nimport { StripeElementType } from \"@stripe/stripe-js\";\r\n\r\ninterface Props {\r\n    cardState: { elementError: { [key in StripeElementType]?: string } };\r\n    onCardInputChange: (event: any) => void;\r\n}\r\n\r\nexport default function PaymentForm({ cardState, onCardInputChange }: Props) {\r\n    const { control } = useFormContext();\r\n\r\n    return (\r\n        <>\r\n            <Typography variant='h6' gutterBottom>\r\n                Payment method\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} md={6}>\r\n                    <AppTextInput\r\n                        name='nameOnCard'\r\n                        label='Name on card'\r\n                        control={control}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        onChange={onCardInputChange}\r\n                        error={!!cardState.elementError.cardNumber}\r\n                        helperText={cardState.elementError.cardNumber}\r\n                        id='cardNumber'\r\n                        label='Card number'\r\n                        fullWidth\r\n                        autoComplete='cc-number'\r\n                        variant='outlined'\r\n                        InputLabelProps={{ shrink: true }}\r\n                        InputProps={{\r\n                            inputComponent: StripeInput,\r\n                            inputProps: {\r\n                                component: CardNumberElement,\r\n                            },\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        onChange={onCardInputChange}\r\n                        error={!!cardState.elementError.cardExpiry}\r\n                        helperText={cardState.elementError.cardExpiry}\r\n                        id='expDate'\r\n                        label='Expiry date'\r\n                        fullWidth\r\n                        autoComplete='cc-exp'\r\n                        variant='outlined'\r\n                        InputLabelProps={{ shrink: true }}\r\n                        InputProps={{\r\n                            inputComponent: StripeInput,\r\n                            inputProps: {\r\n                                component: CardExpiryElement,\r\n                            },\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        onChange={onCardInputChange}\r\n                        error={!!cardState.elementError.cardCvc}\r\n                        helperText={cardState.elementError.cardCvc}\r\n                        id='cvv'\r\n                        label='CVV'\r\n                        fullWidth\r\n                        autoComplete='cc-csc'\r\n                        variant='outlined'\r\n                        InputLabelProps={{ shrink: true }}\r\n                        InputProps={{\r\n                            inputComponent: StripeInput,\r\n                            inputProps: {\r\n                                component: CardCvcElement,\r\n                            },\r\n                        }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","import { Grid } from \"@mui/material\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport BasketSummary from \"../basket/BasketSummary\";\r\nimport BasketTable from \"../basket/BasketTable\";\r\n\r\nexport default function Review() {\r\n    const {basket} = useAppSelector(state => state.basket);\r\n    return (\r\n        <>\r\n            <Typography variant='h6' gutterBottom>\r\n                Order summary\r\n            </Typography>\r\n            {basket &&\r\n            <BasketTable items={basket.items} isBasket={false}/>}\r\n            <Grid container>\r\n                <Grid item xs={6} />\r\n                <Grid item xs={6}>\r\n                    <BasketSummary />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","import * as yup from \"yup\";\r\n\r\nexport const validationSchema = [\r\n    yup.object({\r\n        fullName: yup.string().required(\"The full name is required\"),\r\n        address1: yup.string().required(\"The address line 1 is required\"),\r\n        address2: yup.string().required(\"the address line 2 is required\"),\r\n        city: yup.string().required(\"The city is required\"),\r\n        state: yup.string().required(\"The state is required\"),\r\n        zip: yup.string().required(\"The Zip is required\"),\r\n        country: yup.string().required(\"The Country is required\"),\r\n    }),\r\n    yup.object(),\r\n    yup.object({\r\n        nameOnCard: yup.string().required()\r\n    })\r\n\r\n];\r\n","import {\r\n    Box,\r\n    Button,\r\n    Paper,\r\n    Step,\r\n    StepLabel,\r\n    Stepper,\r\n    Typography,\r\n} from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { FieldValues, FormProvider, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport AddressForm from \"./AddressForm\";\r\nimport PaymentForm from \"./PaymentForm\";\r\nimport Review from \"./Review\";\r\nimport { validationSchema } from \"./checkoutValidation\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { clearBasket } from \"../basket/basketSlice\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { StripeElementType } from \"@stripe/stripe-js\";\r\nimport {\r\n    CardNumberElement,\r\n    useElements,\r\n    useStripe,\r\n} from \"@stripe/react-stripe-js\";\r\n\r\nconst steps = [\"Shipping address\", \"Review your order\", \"Payment details\"];\r\n\r\nexport default function CheckoutPage() {\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [orderNumber, setOrderNumber] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch = useAppDispatch();\r\n    const [cardState, setCardState] = useState<{\r\n        elementError: { [key in StripeElementType]?: string };\r\n    }>({ elementError: {} });\r\n    const [cardComplete, setCardComplete] = useState<any>({\r\n        cardNumber: false,\r\n        cardExpiry: false,\r\n        cardCvc: false,\r\n    });\r\n    const [paymentMessage, setPaymentMessage] = useState(\"\");\r\n    const [paymentSucceeded, setPaymentSucceeded] = useState(false);\r\n    const { basket } = useAppSelector((state) => state.basket);\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    function onCardInputChange(event: any) {\r\n        setCardState({\r\n            ...cardState,\r\n            elementError: {\r\n                ...cardState.elementError,\r\n                [event.elementType]: event.error?.message,\r\n            },\r\n        });\r\n        setCardComplete({\r\n            ...cardComplete,\r\n            [event.elementType]: event.complete,\r\n        });\r\n    }\r\n\r\n    function getStepContent(step: number) {\r\n        switch (step) {\r\n            case 0:\r\n                return <AddressForm />;\r\n            case 1:\r\n                return <Review />;\r\n            case 2:\r\n                return (\r\n                    <PaymentForm\r\n                        cardState={cardState}\r\n                        onCardInputChange={onCardInputChange}\r\n                    />\r\n                );\r\n            default:\r\n                throw new Error(\"Unknown step\");\r\n        }\r\n    }\r\n\r\n    const currentValidationSchema = validationSchema[activeStep];\r\n\r\n    const methods = useForm({\r\n        mode: \"all\",\r\n        resolver: yupResolver(currentValidationSchema),\r\n    });\r\n\r\n    useEffect(() => {\r\n        agent.Account.fetchAddress().then((response) => {\r\n            if (response) {\r\n                methods.reset({\r\n                    ...methods.getValues(),\r\n                    ...response,\r\n                    saveAddress: false,\r\n                });\r\n            }\r\n        });\r\n    }, [methods]);\r\n\r\n    async function submitOrder(data: FieldValues) {\r\n        setLoading(true);\r\n        const { nameOnCard, saveAddress, ...shippingAddress } = data;\r\n        if (!stripe || !elements) return; // stripe is not ready\r\n        try {\r\n            const cardElement = elements.getElement(CardNumberElement);\r\n            const paymentResult = await stripe.confirmCardPayment(\r\n                basket?.clientSecret!,\r\n                {\r\n                    payment_method: {\r\n                        card: cardElement!,\r\n                        billing_details: {\r\n                            name: nameOnCard,\r\n                        },\r\n                    },\r\n                }\r\n            );\r\n            console.log(paymentResult);\r\n            if (paymentResult.paymentIntent?.status === \"succeeded\") {\r\n                const orderNumber = await agent.Orders.create({\r\n                    saveAddress,\r\n                    shippingAddress,\r\n                });\r\n                setOrderNumber(orderNumber);\r\n                setPaymentSucceeded(true);\r\n                setPaymentMessage(\"Thank you - we have received your payment\");\r\n                setActiveStep(activeStep + 1);\r\n                dispatch(clearBasket());\r\n                setLoading(false);\r\n            } else {\r\n                setPaymentMessage(paymentResult.error?.message!);\r\n                setPaymentSucceeded(false);\r\n                setLoading(false);\r\n                setActiveStep(activeStep + 1);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const handleNext = async (data: FieldValues) => {\r\n        if (activeStep === steps.length - 1) {\r\n            await submitOrder(data);\r\n        } else {\r\n            setActiveStep(activeStep + 1);\r\n        }\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n    function submitDisabled(): boolean {\r\n        if (activeStep === steps.length - 1) {\r\n            return (\r\n                !cardComplete.cardCvc ||\r\n                !cardComplete.cardExpiry ||\r\n                !cardComplete.cardNumber ||\r\n                !methods.formState.isValid\r\n            );\r\n        } else {\r\n            return !methods.formState.isValid;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormProvider {...methods}>\r\n            <Paper\r\n                variant='outlined'\r\n                sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}\r\n            >\r\n                <Typography component='h1' variant='h4' align='center'>\r\n                    Checkout\r\n                </Typography>\r\n                <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\r\n                    {steps.map((label) => (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n                <>\r\n                    {activeStep === steps.length ? (\r\n                        <>\r\n                            <Typography variant='h5' gutterBottom>\r\n                                {paymentMessage}\r\n                            </Typography>\r\n                            {paymentSucceeded ? (\r\n                                <Typography variant='subtitle1'>\r\n                                    Your order number is #{orderNumber}. We have\r\n                                    not emailed your order confirmation, and\r\n                                    will not send you an update when your order\r\n                                    has shipped as this is a fake store!\r\n                                </Typography>\r\n                            ) : (\r\n                                <Button\r\n                                    variant='contained'\r\n                                    onClick={handleBack}\r\n                                >\r\n                                    Go back and try again\r\n                                </Button>\r\n                            )}\r\n                        </>\r\n                    ) : (\r\n                        <form onSubmit={methods.handleSubmit(handleNext)}>\r\n                            {getStepContent(activeStep)}\r\n                            <Box\r\n                                sx={{\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"flex-end\",\r\n                                }}\r\n                            >\r\n                                {activeStep !== 0 && (\r\n                                    <Button\r\n                                        onClick={handleBack}\r\n                                        sx={{ mt: 3, ml: 1 }}\r\n                                    >\r\n                                        Back\r\n                                    </Button>\r\n                                )}\r\n                                <LoadingButton\r\n                                    loading={loading}\r\n                                    disabled={submitDisabled()}\r\n                                    variant='contained'\r\n                                    type='submit'\r\n                                    sx={{ mt: 3, ml: 1 }}\r\n                                >\r\n                                    {activeStep === steps.length - 1\r\n                                        ? \"Place order\"\r\n                                        : \"Next\"}\r\n                                </LoadingButton>\r\n                            </Box>\r\n                        </form>\r\n                    )}\r\n                </>\r\n            </Paper>\r\n        </FormProvider>\r\n    );\r\n}\r\n","import { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { useEffect, useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { setBasket } from \"../basket/basketSlice\";\r\nimport CheckoutPage from \"./CheckoutPage\";\r\n\r\nconst stripePromise = loadStripe(\r\n    \"pk_test_51KEr7BIysTd1BE5eymLqbDwksD1C2hbd196cvhIPbrAY3CDgP8Yl9jcRz1sgOzWMyGV15CEc1Y5bXveJYStDTzFS00nTnEE28p\"\r\n);\r\n\r\nexport default function CheckoutWrapper() {\r\n    const dispatch = useAppDispatch();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        agent.Payments.createPaymentIntent()\r\n            .then((basket) => dispatch(setBasket(basket)))\r\n            .catch((error) => console.log(error))\r\n            .finally(() => setLoading(false));\r\n    }, [dispatch]);\r\n\r\n    if (loading) return <LoadingComponent message='Loading checkout...' />;\r\n\r\n    return (\r\n        <Elements stripe={stripePromise}>\r\n            <CheckoutPage />\r\n        </Elements>\r\n    );\r\n}\r\n","import Header from \"./Header\";\nimport HomePage from \"../../features/home/HomePage\";\nimport {\n    Container,\n    createTheme,\n    CssBaseline,\n    ThemeProvider,\n} from \"@mui/material\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport Catalog from \"../../features/catalog/Catalog\";\nimport ProductDetails from \"../../features/catalog/ProductDetails\";\nimport AboutPage from \"../../features/about/AboutPage\";\nimport ContactPage from \"../../features/contact/ContactPage\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport ServerError from \"../errors/ServerError\";\nimport BasketPage from \"../../features/basket/BasketPage\";\nimport NotFound from \"../errors/NotFound\";\nimport Login from \"../../features/account/Login\";\nimport Register from \"../../features/account/Register\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport { useAppDispatch } from \"../store/configureStore\";\nimport { fetchBasketAsync } from \"../../features/basket/basketSlice\";\nimport { fetchCurrentUser } from \"../../features/account/accountSlice\";\nimport Orders from \"../../features/orders/Orders\";\nimport CheckoutWrapper from \"../../features/checkout/CheckoutWrapper\";\n\nfunction App() {\n    const dispatch = useAppDispatch();\n    const [loading, setLoading] = useState(true);\n\n    const initApp = useCallback(async () => {\n        try {\n            await dispatch(fetchCurrentUser());\n            await dispatch(fetchBasketAsync());\n        } catch (error: any) {\n            console.log(error);\n        }\n    }, [dispatch]);\n\n    useEffect(() => {\n        initApp().then(() => setLoading(false));\n    }, [initApp]);\n\n    const [darkMode, setDarkMode] = useState(false);\n    const paletteType = darkMode ? \"dark\" : \"light\";\n    const theme = createTheme({\n        palette: {\n            mode: paletteType,\n            background: {\n                default: paletteType === \"light\" ? \"#eaeaea\" : \"#121212\",\n            },\n        },\n    });\n\n    function handleThemeChange() {\n        setDarkMode(!darkMode);\n    }\n\n    if (loading) return <LoadingComponent message='Initialising app...' />;\n\n    return (\n        <ThemeProvider theme={theme}>\n            <ToastContainer position='bottom-right' hideProgressBar />\n            <CssBaseline />\n            <Header darkMode={darkMode} handleThemeChange={handleThemeChange} />\n            <Route exact path='/' component={HomePage} />\n            <Route\n                path={\"/(.+)\"}\n                render={() => (\n                    <Container sx={{ mt: 4 }}>\n                        <Switch>\n                            <Route exact path='/catalog' component={Catalog} />\n                            <Route\n                                path='/catalog/:id'\n                                component={ProductDetails}\n                            />\n                            <Route path='/about' component={AboutPage} />\n                            <Route path='/contact' component={ContactPage} />\n                            <Route\n                                path='/server-error'\n                                component={ServerError}\n                            />\n                            <Route path='/basket' component={BasketPage} />\n                            <PrivateRoute\n                                path='/checkout'\n                                component={CheckoutWrapper}\n                            />\n                            <PrivateRoute path='/orders' component={Orders} />\n                            <Route path='/login' component={Login} />\n                            <Route path='/register' component={Register} />\n                            <Route component={NotFound} />\n                        </Switch>\n                    </Container>\n                )}\n            />\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./app/layout/styles.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./app/store/configureStore\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router history={history}>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}